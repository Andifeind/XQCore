var XQCore=require("./src/xqcore-core");XQCore.Promise=require("./src/xqcore-promise"),XQCore.Logger=require("./src/xqcore-logger"),XQCore.ReadyState=require("./src/xqcore-readystate"),XQCore.Event=require("./src/xqcore-event"),XQCore.Sync=require("./src/xqcore-sync"),XQCore.List=require("./src/xqcore-list"),XQCore.Model=require("./src/xqcore-model"),XQCore.Presenter=require("./src/xqcore-presenter"),XQCore.Router=require("./src/xqcore-router"),XQCore.Service=require("./src/xqcore-service"),XQCore.SocketConnection=require("./src/xqcore-socket-connection"),XQCore.Socket=require("./src/xqcore-socket"),XQCore.SyncList=require("./src/xqcore-synclist"),XQCore.SyncModel=require("./src/xqcore-syncmodel"),XQCore.Tmpl=require("./src/xqcore-tmpl"),XQCore.View=require("./src/xqcore-view"),require("./src/xqcore-utils"),module.exports=XQCore;/**
 * XQCore core module
 * @module XQCore
 */
var $=require("jquery"),XQCore={/**
     * Contains the current XQCore version
     * @property {String} version
     */
version:"0.13.1",/**
     * Defines a default route
     * @property {String} defaultRoute
     */
defaultRoute:"/",/**
     * Enables html5 routing support
     * @property {Boolean} html5Routes
     * @default false
     */
html5Routes:!1,/**
     * Defines a base path of your projewt
     * @type {String}
     */
basePath:"",/**
     * Sets a hashbang for routing. This value is added to each route if html5Routes is set to false
     * @property {String} hashBang
     */
hashBang:"#!",/**
     * Sets the default template engine
     * @property {String} templateEngine
     * @default firetpl
     */
templateEngine:"firetpl",/**
     * Sets a views directory
     * @property {String} viewsDir
     */
viewsDir:"./views/",/**
     * Set the file extension for views
     * @property {String} viewExt
     */
viewExt:".fire",/**
     * Defines a default socket port
     * @property {Number} socketPort
     * @default 9889
     */
socketPort:9889,/**
     * Sets max length of event listener
     * @property {Number} eventListenerMaxLength
     * @default  1328
     */
eventListenerMaxLength:1328};/**
 * Merges the properties from one or more objects together into a target object
 * Its simply an alias for jQuery.extend.
 * 
 * @method extend
 * @param {Boolean} [deep] If true, a deep merge is using
 * @param {Object} target Target object. This object will be extended with new properties
 * @param {Object} [object1] Object to merge
 * @param {Object} [objectN] Object to merge
 * @return {Object} Returns the merged target object
 * @example {js}
 * var target = {
 *     a: 'A1',
 *     b: 'B1'
 * }
 *
 * var obj1 = {
 *     b: 'B2',
 *     c: 'C2'
 * }
 *
 * extend(target, obj1);
 * //Returns {a: 'A1', b: 'B2', c: 'C2'}
 *  
 */
XQCore.extend=$.extend,/**
 * Checks whether an value is a plain object
 * @method isPlainObject
 *
 * @param {Object} obj The value which should be checked
 * @returns {Boolean} Returns true if value is a function, otherwise returns false
 */
XQCore.isPlainObject=$.isPlainObject,/**
 * Checks whether an value is a function
 * @method isPlainObject
 *
 * @param {Object} obj The value which should be checked
 * @returns {Boolean} Returns true if value is a plain object, otherwise returns false
 */
XQCore.isFunction=$.isFunction,/**
 * Checks for a valid ObjectId
 * 
 * The pattern of an objectId can be overwritten by setting the XQCore.objectIdPattern property
 *
 * @return {Boolean} Returns true if value is an valid objectId
 */
XQCore.isObjectId=function(a){return/^[a-zA-Z0-9]{24}$/.test(a)},/**
 * Set a local for the current session
 * 
 * @method setLocale
 * @param  {String}  locale Local string
 */
XQCore.setLocale=function(a){localStorage.setItem("xqcore.locale",a)},/**
 * Returns a local string
 * @method getLocale
 * @return {[type]}  [description]
 */
XQCore.getLocale=function(){var a=localStorage.getItem("xqcore.locale");return a?a:navigator.language},/**
 * Defines a global log level
 *
 * XQCore has 5 log levels
 *
 * 0 = off
 * 1 = error
 * 2 = warning
 * 3 = info
 * 4 = debug
 * 5 = trace
 * 
 * @property {String} logLevel
 */
XQCore.logLevel=1,/**
 * Returns one or all queries
 * Converts all numeric items to a Number
 *
 * @method getQuery
 * @param  {String} name Query name
 * @return {Object|String}      Returns all queries or one value.
 */
XQCore.getQuery=function(a){return XQCore.__query||(XQCore.__query={},location.search.substr(1).split("&").forEach(function(a){if(a=a.split("="),a&&a[0]){var b=encodeURI(a[1]);XQCore.__query[a[0]]=isNaN(b)?b:Number(b)}})),a?XQCore.__query[a]:XQCore.__query},/**
 * Checks whether an object is an empty object
 * @param  {Object}  obj Object which should be checked
 * @return {Boolean}     Returns true if object is empty
 */
XQCore.isEmptyObject=function(a){var b;
//jshint forin:false
for(b in a)return!1;return!0},/**
 * Checks whether an object is an empty object or an empty array
 * @param  {Object|Array}  obj Object which should be checked
 * @return {Boolean}     Returns true if obj is empty
 */
XQCore.isEmpty=function(a){return Array.isArray(a)?0===a.length:XQCore.isEmptyObject(a)},
//--
module.exports=XQCore;var XQCore=require("./xqcore-core"),Logger=function(a){this.loggerName=a,this.logLevel=XQCore.logLevel};/**
 * Logs a message to the console.
 *
 * To log a message of this type a minimum logLevel of INFO is required.
 * Only the first given argument will be logged if log level is set to INFO.
 * To log all arguments, log level must be set to DEBUG.
 *
 * This method can have multiple arguments!
 *
 * @method log
 * @example {js}
 * log.logLevel = 3; //INFO
 * log.log('Write to console', {test: '123'});
 * //Logs only the first argument
 *
 * log.logLevel = 4;
 * log.log('Write to console with args', {test: '123'});
 * //Logs all arguments
 *
 * @param {Any} msg logs all arguments to the console
 */
Logger.prototype.log=function(){var a;XQCore.logLevel>=3&&(a=Array.prototype.slice.call(arguments),this.loggerName&&a.unshift("["+this.loggerName+"]"),console.log.apply(console,a))},/**
 * Logs a warning message to the console.
 *
 * To log a warning message of this type a minimum logLevel of WARNING is required.
 *
 * This method can have multiple arguments!
 *
 * @method warn
 * @example {js}
 * log.logLevel = 2; //WARNING
 * log.warn('Unvalid number', {test: '123'});
 *
 * @param {Any} msg logs all arguments to the console
 */
Logger.prototype.warn=function(){var a;XQCore.logLevel>=2&&(a=Array.prototype.slice.call(arguments),this.loggerName&&a.unshift("["+this.loggerName+"]"),console.warn.apply(console,a))},/**
 * Logs a error message to the console.
 *
 * To log a error message of this type a minimum logLevel of WARNING is required.
 *
 * This method can have multiple arguments!
 *
 * @method error
 * @example {js}
 * log.logLevel = 1; //ERROR
 * log.error('Unvalid number', {test: '123'});
 *
 * @param {Any} msg logs all arguments to the console
 */
Logger.prototype.error=function(){var a;XQCore.logLevel>=1&&(a=Array.prototype.slice.call(arguments),this.loggerName&&a.unshift("["+this.loggerName+"]"),console.error.apply(console,a))},/**
 * Logs a debug message to the console.
 *
 * To log a debug message of this type a minimum logLevel of DEBUG is required.
 * Only the first given argument will be logged if log level is set to DEBUG.
 * To log all arguments, log level must be set to TRACE.
 *
 * This method can have multiple arguments!
 *
 * @method debug
 * @example {js}
 * log.logLevel = 3; //DEBUG
 * log.debug('Write to console', {test: '123'});
 * //Logs only the first argument
 *
 * log.logLevel = 4;
 * log.debug('Write to console with args', {test: '123'});
 * //Logs all arguments
 *
 * @param {Any} msg logs all arguments to the console
 */
Logger.prototype.debug=function(){var a;XQCore.logLevel>=4&&(a=Array.prototype.slice.call(arguments),this.loggerName&&a.unshift("["+this.loggerName+"]"),console.debug.apply(console,a))},/**
 * Logs a log message to the console. This is just an alias for log
 *
 * @method info
 */
Logger.prototype.info=Logger.prototype.log,/**
 * Start a timeTracer
 *
 * @method timer
 * @param {String} timerName Set the name for your (Optional)
 * @return {Object} Returns a TimerObject
 */
Logger.prototype.timer=function(a){var b=this,c={start:null,stop:null,name:a,logger:this,end:function(){this.stop=Date.now(),this.logger.log("Timer "+a+" finished after "+b.getHumanTime(this.stop-this.start))}};/*if (name) {
        this.timerStore[name] = timer;
    }*/
//Set timer start time
return this.log("Start Timer "+a),c.start=Date.now(),c},
// --- new methods
Logger.prototype.dev=function(){this.warn("Logger.dev() is deprcated since v0.13! Use Logger.debug() instead"),this.debug.call(arguments)},Logger.prototype.req=Logger.prototype.log,Logger.prototype.res=Logger.prototype.log,/**
 * Returns a human readable time format
 * @method getHumanTime
 * @private
 * @param  {Number}     time Time in milliseconds
 * @return {String}          Returns a readable time string
 */
Logger.prototype.getHumanTime=function(a){return 1e3>a?a+"ms":6e4>a?Math.round(a/100)/10+"sec":Math.round(a/6e4)+"min "+Math.round(a%6e4/1e3)+"sec"},
//--
module.exports=Logger;var XQCore=require("./xqcore-core");XQCore.undotify=function(a,b){return a&&(a=a.split("."),a.forEach(function(a){b=b?b[a]:void 0})),b},/**
 * Creates a object from an dotified key and a value
 *
 * @public
 * @method dedotify
 * 
 * @param {Object} obj Add new value to obj. This param is optional.
 * @param {String} key The dotified key
 * @param {Any} value The value
 *
 * @returns {Object} Returns the extended object if obj was set otherwis a new object will be returned
 */
XQCore.dedotify=function(a,b,c){"string"==typeof a&&(c=b,b=a,a={});var d=a;if(b){b=b.split(".");var e=b.length;b.forEach(function(b,d){return d===e-1?/\[\]$/.test(b)?(b=b.substr(0,b.length-2),a[b]||(a[b]=[]),void a[b].push(c)):void(a[b]=c):(a[b]||(a[b]={}),void(a=a[b]))})}return a=c,d},/**
 * Creates a unique id
 *
 * @param {Number} len (Optional) String length. Defaults to 7
 * @returns {String} Unique string
 */
XQCore.uid=function(a){a=a||7;for(var b="";b.length<a;){var c=Math.random().toString(36).substr(2);b+=c}return b.substr(0,a)},/**
 * Returns a promise object
 *
 * the returning object has two extra methods
 *
 * `resolve` to resolv the promise
 * `reject` to reject the promise
 *
 * If callback is set it will be called, when promise will be resolved or rejected.
 * Gets the reject data as first argument and the resolve data as second argument
 *
 * @example {js}
 * var promise = XQCore.promise();
 * promise.then(function() {
 *     console.log('Resolve');
 * });
 * 
 * setTimeout(function() {
 *     promise.resolve();
 * }, 100);
 *     
 * @method promise
 * @param  {Function} [callback] Callback function, to be called on resolv or rejecting the promise
 * @return {Object} Returns a promise object
 */
XQCore.promise=function(a){var b,c,d=new XQCore.Promise(function(a,d){b=a,c=d});d.resolve=function(c){return b(c),"function"==typeof a&&a(null,c),d},d.reject=function(b){return c(b),"function"==typeof a&&a(b),d};var e=[];return d.push=function(a){if("function"!=typeof a)throw new Error("Could not create a promise chain! First arg is not a function in promise.push().");return e.push(a),this},d.each=function(a){var b=e.shift();return b?(b(a).then(function(a){d.each(a)})["catch"](function(a){d.reject(a)}),d):void d.resolve(a)},d};var XQCore=require("./xqcore-core"),log,EventListener=function(a,b,c){this.fn=c,this.calls=0,this.once=!1,/**
     * Removes this event listener
     * @group XQCore.Event.EventListener
     * @private
     * @method remove
     * @return {Boolean} Returns true if event was removed
     */
this.remove=function(){a.off(b,c)}},EventEmitter=function(){log=new XQCore.Logger("EventEmitter"),this.__events={},this.__logger=log,this.maxLength=XQCore.eventListenerMaxLength};/**
 * Registers an event listener
 * @method on
 * @param  {String}   event Event name
 * @param  {Function} fn    Event function
 * @return {Object}         Returns an EventListener instance
 */
EventEmitter.prototype.on=function(a,b){var c=new EventListener(this,a,b);return this.__events[a]||(this.__events[a]=[]),this.__events[a].push(c),this.__events[a].length>this.maxLength?log.warn("Listener max length was exceeded!","List:",a,"Length:",this.__events[a].length):log.info("Register new `"+a+"` event"),c},/**
 * Registers an once event listener. This listener is called only once a time.
 *
 * @method once
 * @param  {event}  event  Event name
 * @param  {Function} fn    Event function
 * @return {Object}         Returns an EventListener instance
 */
EventEmitter.prototype.once=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.on.apply(this,c);return d.once=!0,d},/**
 * Emits an event
 * @method emit
 * @param  {String} event Event name
 * @param  {Any} data  Event data, you can use multiple args here
 * @return {Number}    Returns the number of emited events
 */
EventEmitter.prototype.emit=function(a,b){if(!this.__events[a])return log.info("Emit `"+a+"` event failed! No listener of this type are registered"),0;for(var c=Array.prototype.slice.call(arguments,1),d=this.__events[a].length,e=d-1;e>=0;e--){var f=this.__events[a][e];f.fn.apply(this,c),f.calls++,f.once===!0&&this.__events[a].splice(e,1)}return d&&(log.info("Emit `"+a+"` event to",d,"listener"),log.debug(" ... data:",b)),d},/**
 * Unregisters events
 *
 * @method off
 * @param  {String}  event  Event name
 * @param  {Function}  [fn]  Event function. If this property is set only that function will be removed. Otherwis all events of this name will be removed
 * @return {Number} Returns the number of removed events
 */
EventEmitter.prototype.off=function(a,b){var c=0;if(!this.__events[a])return log.info("Unregister events failed! No `"+a+"` events were found!"),0;if(b)for(var d=this.__events[a].length,e=0;d>e;e++){var f=this.__events[a][e];f&&f.fn===b&&(this.__events[a].splice(e,1),c++,0===this.__events[a].length&&delete this.__events[a])}else c=this.__events[a].length,delete this.__events[a];return log.info("Unregister `"+a+"` events!","Removed "+c+" listener"),c},/**
 * Removes all registered events
 * @method clear
 * @return {Number} Returns the number of removed events
 */
EventEmitter.prototype.clearEvents=function(){this.__events={}},
//--
module.exports=EventEmitter;/**
 * XQCore.ReadyState module
 * 
 * Holds a function call until a state becomes ready
 * 
 * @module XQCore.ReadyState
 */
var ReadyState=function(){this.__isReady=!1,this.__readyFuncs=[]};/**
 * Wait till view is ready
 *
 * @method ready
 * @param {Function} fn FUnction to be called if state becomes ready
 */
ReadyState.prototype.ready=function(a){this.__isReady?a.call(this):this.__readyFuncs.push(a)},/**
 * Sets a state ready and calls all retained functions
 * 
 * @method setReady
 */
ReadyState.prototype.setReady=function(){var a=this;this.__isReady=!0,this.__readyFuncs&&(this.__readyFuncs.forEach(function(b){b.call(a)}),this.__readyFuncs=[])},/**
 * Unsets a ready state
 * 
 * @method unsetReady
 */
ReadyState.prototype.unsetReady=function(){this.__isReady=!1},
//--
module.exports=ReadyState;var XQCore=require("./xqcore-core"),$=require("jquery"),Sync=function(){/**
     * Sets a server URI
     *
     * This URI is used by all send methods as default server URI
     * @property {String} server
     */
this.server=null};/**
 * Called on before sending an ajax request
 * You can use this function to manipulate all data they be send to the server
 *
 * @param {Object} data The data to send to the server
 * @return {Object} data
 */
Sync.prototype.onSend=function(a){return a},/**
 * Send an ajax request to the webserver.
 *
 * You must set the server URI first with model.server = 'http://example.com/post'
 *
 * @param {String} Method send method, GET, POST, PUT, DELETE (default POST)
 * @param {String} url Server URL (optional, then model.server must be set)
 * @param {Object} data The data to sent to the server
 * @param {Function} callback Calls callback(err, data, status, jqXHR) if response was receiving
 */
Sync.prototype.send=function(a,b,c,d){var e=this;"object"==typeof b?(d=c,c=b,b=this.server,a=a):"function"==typeof c?(d=c,c=this.toJSON?this.toJSON():null):void 0===c&&(c=this.toJSON?this.toJSON():null),void 0===a&&(a="POST"),b||(b=this.server),"GET"===a&&Array.isArray(c)&&(b=b.replace(/\/$/,"")+"/"+c.join("/"),c=null),
//Handle onSend
"function"==typeof this.onSend&&(c=this.onSend.call(this,c)),this.log("Send an ajax call to ",b,"with data: ",c),this.state("syncing");var f=new Promise(function(f,g){$.ajax({url:b,type:a,data:XQCore.isEmpty(c)?null:JSON.stringify(c),dataType:"json",contentType:"application/json",headers:{Accept:"application/json"},success:function(a,b,c){"function"==typeof d&&d.call(e,null,a,b,c),e.state("success"),f(a)},error:function(a,b,c){"function"==typeof d&&d.call(e,{type:b,http:c},null,b,a),e.state("failed"),g({type:b,http:c})}})});return f},/**
 * Sends a POST to the Datastore
 *
 * @param {String} url Server URL (optional, then model.server must be set)
 * @param  {Object}   data     Dato to sending
 * @param  {Function} callback Calling on response
 *
 * callback: void function(err, data, status, jqXHR)
 *
 */
Sync.prototype.sendPOST=function(a,b,c){return this.send("POST",a,b,c)},/**
 * Sends a GET to the Datastore
 *
 * @param {String} url Server URL (optional, then model.server must be set)
 * @param  {Object}   data     Dato to sending
 * @param  {Function} callback Calling on response
 *
 * callback: void function(err, data, status, jqXHR)
 *
 */
Sync.prototype.sendGET=function(a,b,c){return this.send("GET",a,b,c)},/**
 * Sends a PUT to the Datastore
 *
 * @param {String} url Server URL (optional, then model.server must be set)
 * @param  {Object}   data     Dato to sending
 * @param  {Function} callback Calling on response
 *
 * callback: void function(err, data, status, jqXHR)
 *
 */
Sync.prototype.sendPUT=function(a,b,c){return this.send("PUT",a,b,c)},/**
 * Sends a DELETE to the Datastore
 *
 * @param {String} url Server URL (optional, then model.server must be set)
 * @param  {Object}   data     Dato to sending
 * @param  {Function} callback Calling on response
 *
 * callback: void function(err, data, status, jqXHR)
 *
 */
Sync.prototype.sendDELETE=function(a,b,c){return this.send("DELETE",a,b,c)},/**
 * Fetch data from server
 *
 * @param {Object} query MongoDB query 
 * @param {Function} callback Callback function
 */
Sync.prototype.fetch=function(a,b){return this.sendGET(a,b)},/**
 * Save a model if it's valid
 */
Sync.prototype.save=function(a,b){return"function"==typeof a&&(b=a,a=this.schema?this.getByKeys(Object.keys(this.schema)):this.toJSON()),this.isValid()?this.sendPOST(a,b):"function"!=typeof b?Promise.reject({msg:"Model isn't valid. Cancle save"}):void b({msg:"Model isn't valid. Cancle save"})},/**
 * Update a model if it's valid
 */
Sync.prototype.update=function(a,b){"function"==typeof a&&(b=a,a=this.schema?this.getByKeys(Object.keys(this.schema)):this.toJSON()),this.isValid()?this.sendPUT(a,b):"function"==typeof b&&b({msg:"Model isn't valid. Cancel update"})},/**
 * To be called when a form was submited in a coupled model
 *
 * This method merges submited form data with model.
 * If validation doesn't fail, update or save methode have to be called.
 * It calls update if data.id is not undefined, otherwise it calls save
 * Override this function if this behavior isn't desired 
 * 
 * @method sync
 * @override
 * @param  {Any} data     data
 */
Sync.prototype.submit=function(a){var b=this,c=new Promise(function(c,d){b.set(a,{extend:!0}).then(function(){b.server&&(void 0===b.get("id")||null===b.get("id")?b.save(a).then(function(a){c(a),b.emit("data.submit",a)})["catch"](function(a){d(a)}):b.update(a).then(function(a){c(a),b.emit("data.submit",a)})["catch"](function(a){d(a)}))})});return c},
//--
module.exports=Sync;var XQCore=require("./xqcore-core"),log,Presenter=function(a,b){var c=this;"function"==typeof arguments[0]&&(b=a,a=null),/**
     * Set presenter name
     * @public
     * @type {String}
     */
this.name=a||"Nameless",/**
     * Router instance
     * @private
     * @type {Object}
     */
this.router=XQCore.Router.getInstance(),log=new XQCore.Logger(this.name+"Presenter"),this.__views={},"function"==typeof b&&b.call(this,c,log)};XQCore.extend(Presenter.prototype,new XQCore.Event),/**
 * Add a history item to the browser history
 *
 * @method pushState
 *
 * @param {String} url Page URL (Optional) defaults to the curent URL
 * @param {Object} data Data object
 */
Presenter.prototype.pushState=function(a,b){
// log.info('Check State', data, history.state, XQCore.compare(data, history.state));
// if (XQCore.compare(data, history.state)) {
//     this.warn('Abborting history.pushState because data are equale to current history state');
// }
var c=XQCore.html5Routes||"/"===a.charAt(0)?"":XQCore.hashBang;a=c+a,history.pushState(b,"",a||null),log.info("Update history with pushState. New URL: "+b,a)},/**
 * Add a history item to the browser history
 *
 * @method replaceState
 *
 * @param {String} url Page URL (Optional) defaults to the current URL
 * @param {Object} data Data object
 */
Presenter.prototype.replaceState=function(a,b){var c=XQCore.html5Routes||"/"===a.charAt(0)?"":XQCore.hashBang;a=c+a,history.replaceState(b,"",a||null),log.info("Update history with replaceState. New URL: "+b,a)},/**
 * Navigates to a given route
 *
 * @method  navigateTo
 *
 * Options: {
 *  replace: <Boolean> Replace current history entry with route (Only when html5 routes are enabled)
 *  noPush: <Boolean> Set this to false to surpress a route change when new route equals to old route
 * }
 *
 * @param {String} route Route url
 * @param {Object} options Options
 */
Presenter.prototype.navigateTo=function(a,b){b=b||{},XQCore.html5Routes?this.router.callRoute(a,b):(location.hash=XQCore.hashBang+a,this.router.callRoute(a,b))},/**
 * Navigate back
 * 
 * @method navigateBack
 */
Presenter.prototype.navigateBack=function(){history.back()},/**
 * Gets a view by it's name
 *
 * @method getView
 * @param {String} viewName Required view name
 * @return {Object} Returns view object or null if no view was found
 */
Presenter.prototype.getView=function(a){return this.__views[a]||null},/**
 * Returns the current hash
 *
 * @method getHash
 * @returns {String} Returns the current value from location.hash
 */
Presenter.prototype.getHash=function(){return location.hash},/**
 * Returns the current pathname
 *
 * @method getPathname
 * @returns {String} Returns the current value from location.pathname
 */
Presenter.prototype.getPathname=function(){return location.pathname},/**
 * Couple a model with a view
 *
 * @method couple
 * @chainable
 * @param {Object} conf Configuration object
 *
 * conf: {
 *   model: String modelname
 *   view: String viewname
 *   route String routename
 * }
 */
Presenter.prototype.couple=function(a,b,c){c=c||{},b instanceof XQCore.List?this.coupleList(a,b,c):this.coupleModel(a,b,c),this.coupleView(a,b,c)},/**
 * Couples a view onto a model
 *
 * @method coupleModel
 * @param {Object} view XQCore.View instance
 * @param {Object} model XQCore.Model instance
 */
Presenter.prototype.coupleModel=function(a,b,c){if(c=c||{},!(a instanceof XQCore.View))return log.error("Could not couple model with view. First arg is not a valid view!");if(!(b instanceof XQCore.Model))return log.error("Could not couple model with view. Second arg is not a valid model!");b.__coupled&&b.__coupled.uncouple(),log.info("Couple model",b.name,"with",a.name),b.__coupled={obj:a,events:[],uncouple:function(){log.info("Uncouple model",b.name,"from",a.name),b.__coupled.events.forEach(function(a){a.remove()}),delete b.__coupled}};var d={"data.replace":"render","data.set":"render","value.set":"change",
// 'item.insert': 'xrender',
"item.remove":"remove","validation.error":"validationFailed","state.change":"onStateChange"},e=function(c,d){var e="function"==typeof d?d:a[d].bind(a),f=b.on(c,e);b.__coupled.events.push(f)};for(var f in d)d.hasOwnProperty(f)&&e(f,d[f]);
//Initial view render with current model data
a.render(b.get())},/**
 * Couples a listwith a view
 *
 * @method coupleList
 * @param {Object} view XQCore.View instance
 * @param {Object} model XQCore.Model instance
 */
Presenter.prototype.coupleList=function(a,b){if(!(a instanceof XQCore.View))return log.error("Could not couple list with view. First arg is not a valid view!");if(!(b instanceof XQCore.List))return log.error("Could not couple list with view. Second arg is not a valid list!");b.__coupled&&b.__coupled.uncouple(),log.info("Couple list",b.name,"with",a.name),b.__coupled={obj:a,events:[],uncouple:function(){log.info("Uncouple list",b.name,"from",a.name),b.__coupled.events.forEach(function(a){a.remove()}),delete b.__coupled}};var c={"item.push":function(b){a.append("_ftl_root",b[0].toJSON())},"item.unshift":"prepend","item.pop":"removeLast","item.shift":"removeFirst","item.update":"update","item.remove":function(b,c){a.remove("_ftl_root",c)},"state.change":"onStateChange"},d=function(c,d){var e="function"==typeof d?d:a[d].bind(a),f=b.on(c,e);b.__coupled.events.push(f)};for(var e in c)c.hasOwnProperty(e)&&d(e,c[e]);
//Initial view render with current list data
a.render(b.toArray())},/**
 * Couples a view with a model or a list
 *
 * @method coupleView
 * @param {Object} view XQCore.View instance
 * @param {Object} model XQCore.Model or XQCore.List instance
 */
Presenter.prototype.coupleView=function(a,b){if(!(a instanceof XQCore.View))return log.error("Could not couple list with view. First arg is not a valid view!");if(!(b instanceof XQCore.Model||b instanceof XQCore.List))return log.error("Could not couple list with view. Second arg is not a valid model or list!");a.__coupled&&a.__coupled.uncouple(),log.info("Couple view",a.name,"with",b.name),a.__coupled={obj:b,events:[],uncouple:function(c){log.info("Uncouple view",a.name,"from",b.name),a.__coupled.events.forEach(function(a){a.remove()}),delete a.__coupled}};var c;c=b instanceof XQCore.Model?{"form.submit":"submit","input.change":"set","input.edit":function(c,d){var e=b.checkValidation(c,d);e?a.validationSucceeded(c,d):a.validationFailed([{property:name}])}}:{"form.submit":"submit"};var d=function(c,d){var e="function"==typeof d?d:b[d].bind(b),f=a.on(c,e);a.__coupled.events.push(f)};for(var e in c)c.hasOwnProperty(e)&&d(e,c[e])},/**
 * Initialize a new view into the presenter scope
 *
 * options: {
 *   mode: String       Insert mode, (append, prepend or replace) replace is default
 *   inject: Boolean    Set to false to disable injecting view into the DOM
 *   forms: Boolean|String     View has forms. Add a selector here or set this to true to find all forms
 * }
 * 
 * @method initView
 * @public
 * @param  {String} viewName  Name of the view
 * @param  {String} container Container selector, default is 'body'
 * @param  {Object} options   View options
 * @return {Object}           Returns a view object
 */
Presenter.prototype.initView=function(a,b,c){c=c||{};var d={};c.viewDir&&(d.viewDir=c.viewDir);var e=new XQCore.View(a,function(e){e.template=XQCore.Tmpl.getTemplate(a,d),e.mode=c.mode||"replace",e.container=b||"body",e.hidden=!!c.hidden,e.forms=c.forms,c.inject===!1&&(e.autoInject=!1)});this.__views[a]=e;var f=this;return XQCore.html5Routes&&e.on("xqcore.navigate",function(a){f.router.callRoute(a)}),e},/**
 * Register a route listener
 *
 * @public
 * @method route
 * @chainable
 * @param {String | Array} route Route string
 * @param {Function} callback Callback function
 * @returns {Object} Returns this value
 */
Presenter.prototype.route=function(a,b){var c=this;return"string"==typeof b&&(b=this[b]),"function"==typeof b?"string"==typeof a?this.router.addRoute(a,b):Array.isArray(a)&&a.forEach(function(a){c.router.addRoute(a,b)}):log.warn("Router callback isn't a function",b,"of route",a),this},
//--
module.exports=Presenter;var XQCore=require("./xqcore-core"),Model=function(a,b){
//Call XQCore.ReadyState constructor
XQCore.ReadyState.call(this),
//Call Event constructor
XQCore.Event.call(this),"object"==typeof arguments[0]&&(b=a,a=b.name),/**
     * Enable debug mode
     * @public
     * @type {Boolean}
     */
this.logLevel=XQCore.logLevel,/**
     * Stores models properties
     * @type {Object}
     * @property properties
     */
this.properties={},/**
     * Contains last validation errors if state is invalid
     * @type {Array}
     * @property lastValidationError
     */
this.lastValidationError=null,
//-- Initial conf mapping
void 0===b&&(b={}),"function"==typeof b?b.call(this,this):XQCore.extend(this,b),this.__state="starting",this.__unfiltered={},this.__isValid=!1,this.customValidate=b.validate,delete b.validate,this.conf=b,/**
     * Model name
     * @property {String} name
     */
this.name=(a?a.replace(/Model$/,""):"Nameless")+"Model",
//-- Add default values
this.defaults&&!XQCore.isEmptyObject(this.defaults)&&this.set(this.defaults,{silent:!0,noValidation:!0}),
//-- Add schema props as default values
this.schema&&Object.keys(this.schema).forEach(function(a){a in this.properties||(this.properties[a]=void 0!==this.schema[a]["default"]?this.schema[a]["default"]:null)},this),this.__isValid=!this.schema,this.state("ready")};
//Extend with ready state
XQCore.extend(Model.prototype,XQCore.ReadyState.prototype),XQCore.extend(Model.prototype,XQCore.Event.prototype),XQCore.extend(Model.prototype,new XQCore.Logger),XQCore.Sync&&XQCore.extend(Model.prototype,XQCore.Sync.prototype),/**
 * Inherits a model prototype
 * @method inherit
 * @static
 * @param  {String} name    model name
 * @param  {Object} options Model properties
 * @return {Object}         Returns a XQCore.Model prototype
 */
Model.inherit=function(a,b){"object"==typeof a&&(b=a,a=void 0);var c=function(c,d){
//TODO call this later, ready state will be set before _options had been run
XQCore.Model.call(this,a,b),c&&("string"==typeof c?a=c:d=c,"function"==typeof d?d.call(this,this):"object"==typeof d&&XQCore.extend(this,d))};return c.prototype=Object.create(XQCore.Model.prototype),c.prototype.constructor=c,c},/**
 * Change the model state
 *
 * @method state
 * @param {String} state New state
 */
Model.prototype.state=function(a){this.__state=a,this.emit("state."+a),this.emit("state.change",a)},/**
 * Get the current model state
 *
 * @method getState
 */
Model.prototype.getState=function(){return this.__state},/**
 * Set model data
 *
 * Triggers a data.change event if data was set succesfully
 *
 * @method set
 * @param {Object} data
 */
/**
 * Set model data
 *
 * Triggers these events if data was set succesfully<br>
 * data.change<br>
 * &lt;key&gt;.change
 *
 * options: {
 *   silent: <Boolean> Don't trigger any events
 *   noValidation: <Boolean> Don't validate
 *   replace: <Boolean> Replace all date with new data
 *   noSync: <Boolean> Do not call sync method. Default: false
 * }
 *
 * @method set
 * @param {String} key
 * @param {Object} value Data value
 * @param {Object} options Options
 *
 * @returns {Object} Returns a promise object
 */
Model.prototype.set=function(a,b,c){var d,e={},f=this.get(),g=!1,h=!1;if(c=c||{},null===arguments[0]?(e=arguments[1],h=!0,this.log("Set data",e,f)):"object"==typeof arguments[0]?(c=b||{},e=c.replace?arguments[0]:XQCore.extend(e,f,arguments[0]),h=!0,a=null,this.log("Set data",e,f)):"string"==typeof arguments[0]?(e=XQCore.extend({},this.get()),g=!0,XQCore.dedotify(e,a,b),this.log("Set value",a,b,f)):this.warn("Data are incorrect in model.set()",arguments),c=c||{},c.noValidation!==!0){if(this.customValidate)this.log("Using a custom validation!"),d=this.customValidate(e);else if(this.schema&&(d=this.validate(e),g&&d)){for(var i,j=0,k=d.length;k>j;j++)if(d[j].property===a){i=[d[j]];break}d=i||null}if(d)return this.warn("Validation error",d),c.silent!==!0&&this.emit("validation.error",d,e),XQCore.Promise.reject({msg:"validation.error",err:d})}
//TODO show only replaced data if set is using
return this.properties=e,c.silent!==!0&&(h?c.noSync||"function"!=typeof this.sync?this.emit(c.replace?"data.replace":"data.set",e,f):this.sync(c.replace?"replace":"set",e):g&&(c.noSync||"function"!=typeof this.sync||this.sync("value",a,b),this.emit("value.set",a,b)),this.emit("data.change",e,f)),XQCore.Promise.resolve(e)},/**
 * Get one or all properties from a dataset
 *
 * <b>Options:</b>
 *   copy: <Boolean>  //Set it to true to get a copy of the dataset
 *
 * @param {String} key Data key
 * @param {Object} options Set options
 *
 * @returns {Object}    Returns the whole model or a filtered dataset
 */
Model.prototype.get=function(key,options){void 0===options&&(options={});var data;if("object"==typeof key&&1===arguments.length&&(options=key,key=null),void 0===key||null===key){if(options.copy===!0)switch(data=this.properties,typeof data){case"object":return Array.isArray(data)?data.slice():XQCore.extend(!0,{},data);case"function":
//jshint evil:true
return eval("("+data.toString()+")");default:return data}return this.properties}if("string"==typeof key&&"number"==typeof options){var index=options;3===arguments.length&&(options=arguments[2]);var item=this.get(key);return options.copy===!0&&"object"==typeof item[index]?XQCore.extend({},item[index]):item?item[index]:null}if(options.copy===!0)switch(data=XQCore.undotify(key,this.properties),typeof data){case"object":return Array.isArray(data)?data.slice():XQCore.extend(!0,{},data);case"function":
//jshint evil:true
return eval("("+data.toString()+")");default:return data}return XQCore.undotify(key,this.properties)},/**
 * Get items filtered by a key array or object
 * @param  {Object|Array} keys Key array
 * @param  {Object} data (Optional) Data to be filtered. Uses model data if it is undefined
 * @return {Object}      Returns a filtered data object
 */
Model.prototype.getByKeys=function(a,b){if("object"!=typeof a)throw new Error("First param must be an object or array in Model.getByKeys()!");var c={};if(b=b||this.get(),Array.isArray(a))a.forEach(function(a){-1===a.indexOf(".")?c[a]=b[a]:c=XQCore.dedotify(c,a,XQCore.undotify(a,b))});else for(var d in a)if(a.hasOwnProperty(d)){var e=b[d];"object"==typeof e?c[d]=this.getByKeys(a[d],b[d]):c[d]=b[d]}return c},/**
 * Check wether model has a dataset
 *
 * @method  has
 * @param {String} key Dataset key
 * @return {Boolean} Returns true if model has a dataset with key
 */
Model.prototype.has=function(a){var b=!0,c=this.properties;a=a.split(".");for(var d=0,e=a.length;e>d;d++){if("object"!=typeof c||!c.hasOwnProperty(a[d])){b=!1;break}c=c[a[d]]}return b},/**
 * Removes all data from model
 *
 * @method reset
 * @param  {Object} options Options object
 * {
 *     removeListener: true,    //Remove all event listener
 *     silent: true,            //Disable event emitting
 *     noSync: true             //Don't call sync method
 * }
 *
 * @fires data.reset
 * Fires a data.reset event if model was succesfully reseted.
 *
 * @returns {Object} Returns removed data
 *
 */
Model.prototype.reset=function(a){a=a||{},this.log("Reset model");var b=this.get();return this.properties=XQCore.extend({},this.defaults),this.state("ready"),a.silent||this.emit("data.reset",b),a.removeListener&&this.clearEvents(),a.noSync||"function"==typeof this.sync&&this.sync("reset",b),b},/**
 * Push data to a subset
 *
 * @method push
 * @param {String} path path to subset
 * @param {Object} data data to add
 */
Model.prototype.push=function(a,b,c){var d=XQCore.undotify(a,this.properties);if(c=c||{},d instanceof Array)d.push(b);else if("undefined"==typeof d)XQCore.dedotify(this.properties,a,[b]);else{if("object"!=typeof d||a||!XQCore.isEmptyObject(this.properties))return void this.error("Model.push requires an array. Dataset isn't an array. Path: ",a);this.properties=[b]}c.silent!==!0&&(c.noSync||"function"!=typeof this.sync||this.sync("insert",a,-1,b),this.emit("item.insert",a,-1,b),this.emit("data.change",this.properties))},/**
 * Unshift data to a subset
 *
 * @method unshift
 * @param {String} path path to subset
 * @param {Object} data data to add
 */
Model.prototype.unshift=function(a,b,c){var d=XQCore.undotify(a,this.properties);if(c=c||{},d instanceof Array)d.unshift(b);else if("undefined"==typeof d)XQCore.dedotify(this.properties,a,[b]);else{if("object"!=typeof d||a||!XQCore.isEmptyObject(this.properties))return void this.error("Model.unshift requires an array. Dataset isn't an array. Path: ",a);this.properties=[b]}c.silent!==!0&&(c.noSync||"function"!=typeof this.sync||this.sync("insert",a,0,b),this.emit("item.insert",a,0,b),this.emit("data.change",this.properties))},/**
 * Insert data into a subset at a given index
 * 
 * @method insert
 * @param {String} path Path to subset
 * @param {Number} index The index where the data should be inserted
 * @param {Object} data Dataset to be inserted
 * @param {Object} options Inserting options
 */
Model.prototype.insert=function(a,b,c,d){var e=XQCore.undotify(a,this.properties);if(d=d||{},e instanceof Array)-1===b?e.push(c):0===b?e.unshift(c):e.splice(b,0,c);else{if(e)return void this.error("Model.insert requires an array. Dataset isn't an array. Path: ",a);XQCore.dedotify(this.properties,a,[c])}d.silent!==!0&&(d.noSync||"function"!=typeof this.sync||this.sync("insert",a,b,c),this.emit("item.insert",a,b,c),this.emit("data.change",this.properties))},/**
 * Remove a subset
 *
 * @method remove
 * @param {String} path path to subset
 * @param {Number} index Index of the subsut to remove
 * @param {Object} options Remove options
 *
 * @return {Object} removed subset
 */
Model.prototype.remove=function(a,b,c){var d=XQCore.undotify(a,this.properties),e=null;if(c=c||{},d instanceof Array)e=d.splice(b,1);else if("object"==typeof d)return void this.error("Model.remove requires an array. Dataset isn't an array. Path: ",a);return e&&c.silent!==!0&&(c.noSync||"function"!=typeof this.sync||this.sync("remove",a,b),this.emit("item.remove",a,b,e[0]),this.emit("data.change",this.properties)),e},/**
 * Replace all models data with new data. This is a alias for set(<AnyData>, {replace: true})
 *
 * @method replace
 * @param {Object} data Data object
 * @param {Object} options Option data. (See set method for details)
 */
Model.prototype.replace=function(a,b){return b=b||{},b.replace=!0,this.set(a,b)},/**
 * Search an item in models properties
 *
 * @method search
 * @param {String} path Path to the parent property. We use dot notation to navigate to subproperties. (data.bla.blub) (Optional)
 * @param {Object} searchfor Searching for object
 * @return {Object} Returns the first matched item or null
 */
Model.prototype.search=function(a,b){var c;if(1===arguments.length?(b=a,a="",c=this.properties):c=a?XQCore.undotify(a,this.properties):this.properties,c)for(var d=0;d<c.length;d++){var e,f=c[d];for(var g in b)if(b.hasOwnProperty(g)){if(f[g]&&f[g]===b[g]){e=!0;break}e=!1}if(e===!0)return f}return null},/**
 * Updates a dataset
 * @development
 * 
 * @method modify
 * @param {String} path Parent path
 * @param {Number|Object} match Search match or index to find the to be modifyd item
 * @param {Object} data Update date
 */
Model.prototype.modify=function(a,b,c,d){var e;d=d||{},e="number"==typeof b?this.get(a,b):this.search(a,b);var f=XQCore.extend({},e);e&&(XQCore.extend(e,c),d.silent!==!0&&(this.emit("data.modify",a,b,c,f),this.emit("data.change",this.properties)),d.noSync||"function"!=typeof this.sync||this.sync("modify",a,b,c))},/**
 * Sort an array collection by a given attribute
 *
 * @method  sortBy
 * @param {String} path Path to the collection
 * @param {Object} sortKeys Sort by key
 *
 * sortKeys: {
 *   'key': 1 // Sort ascend by key,
 *   'second.key': -1 // Sort descand by second.key
 * }
 *
 * ascend, a -> z, 0 - > 9 (-1)
 * descend, z -> a, 9 -> 0 (1)
 * 
 */
Model.prototype.sortBy=function(a,b){1===arguments.length&&(b=a,a=null);var c,d=XQCore.undotify(a,this.properties);return Array.isArray(d)?(d.sort(function(a,d){c=-1;for(var e in b)if(b.hasOwnProperty(e)){if(c=String(XQCore.undotify(e,a)).localeCompare(String(XQCore.undotify(e,d))),0===c)continue;-1===b[e]&&(c=c>0?-1:1);break}return c}),this.set(a,d),d):(this.warn("Could not sort data of type",typeof d),[])},/**
 * Filter an array collection by a given filter function
 *
 * @method filter
 * @param {String} path Path to the collection
 * @param {String | Function} filter Filter function
 *
 */
Model.prototype.filter=function(a,b,c,d){if(1===arguments.length&&(d=a,a=null),"string"==typeof d){if(!this.__registeredFilter[d])throw new Error("Filter "+d+" not registered!");d=this.__registeredFilter[d]}for(var e=XQCore.undotify(a,this.__unfiltered.data||this.properties),f=[],g=0,h=e.length;h>g;g++)d(b,c,e[g])&&f.push(e[g]);return this.__unfiltered={path:a,data:e},this.set(a,f),f},/**
 * Resets a filter
 * @method filterReset
 * @param {Object} options Set options
 */
Model.prototype.filterReset=function(a){this.__unfiltered&&this.set(this.__unfiltered.path,this.__unfiltered.data,a)},/**
 * Validate model
 * @method validate
 * @param {Object} data Data to be validated
 * @param {Object} schema Schema
 * @returns {Object} Returns an object with failed validations or null if validation succeeds
 */
Model.prototype.validate=function(a,b){var c,d=this,e=[];return b=b||this.schema,b&&Object.keys(b).forEach(function(f){if(console.log("KEY",f),"object"==typeof b[f]&&"undefined"==typeof b[f].type)return void(b[f].ref&&b[f].schema?(console.log("Has a subref to %s",b[f].ref),c=d.validate(a,b[f].schema),c&&(e=e.concat(c))):(console.log("SUBVAL"),c=d.validate(XQCore.extend({},a[f]),XQCore.extend({},b[f])),console.log("RES",c),Array.isArray(c)&&c.length>0&&(e=e.concat(c))));var g=d.validateOne(b[f],a[f]);g.isValid===!0?a[f]=g.value:(g.error.property=f,e.push(g.error))}),0===e.length?(this.__isValid=!0,this.lastValidationError=null,this.state("valid"),null):(this.__isValid=!1,this.lastValidationError=e,this.state("invalid"),e)},/**
 * Validate one property
 *
 * ValidatorResultItemObject
 * {
 *   isValid: Boolean,
 *   value: Any,
 *   error: Object
 * }
 *
 * @param  {Any} schema Schema for the check
 * @param  {Any} value Property value
 *
 * @return {Object}       Returns a ValidatorResultItemObject
 */
Model.prototype.validateOne=function(a,b,c){var d,e;if(void 0===a.type){if(!a.ref)throw new Error("No schema type are set!");e="ref"}else e=a.type.toLowerCase();if(""===b&&a.noEmpty===!0&&(b=void 0),void 0!==b&&null!==b&&""!==b||!a["default"]||(b=a["default"]),void 0===b||null===b||""===b)a.required===!0&&(d={msg:"Property is undefined or null, but it's required",errCode:10});else{if(!this.__registeredValidations[e])throw new Error("Undefined schema type",a);d=this.__registeredValidations[e].call(this,b,a)}return d=void 0===d?{isValid:!0,value:b,error:null}:{isValid:!1,value:b,error:d}},/**
 * Checks the validation of a property without changeing any states
 *
 * @method checkValidation
 * @param  {String}  key  Property name
 * @param {String} value Property value
 * @returns {Boolean} Returns true if validation had been passed
 */
Model.prototype.checkValidation=function(a,b){var c=this.validateOne(this.schema[a],b,a);return c.isValid},/**
 * Returns the validation state of the model
 * 
 * @method isValid
 * @returns {Boolean} Returns true when model data are valid. When no data was set it'll returns false
 */
Model.prototype.isValid=function(){return this.__isValid},/**
 * To be called when a form has been submited in a coupled model
 *
 * Model gets <i>submited</i> state when validation succeeds
 * If validation fails, model gets <i>invalid</i> state
 *
 * @deprecated
 * @method setData
 * @param {Object} data Form data
 */
Model.prototype.setData=function(a,b){this.warn("Model.setData has been deprecated since v0.9"),this.set(a,{extend:!0})},/**
 * Register a filter function 
 *
 * XQCore.Model.registerFilter('myfilter', fn);
 * Registers a filter for all models
 *
 * instance.registerFilter('myfilter', fn);
 * Registers a filter for the instance only.
 * 
 * @method registerFilter
 * @param {String} filterName [description]
 * @param {Function} filterFunction [description]
 */
Model.registerFilter=function(a,b){if("function"!=typeof b)throw new Error("Filter function isn't a function");var c="function"==typeof this?Model.prototype:this;c.__registeredFilter[a]=b},/**
 * Alias for Model.registerFilter
 * @type {method}
 */
Model.prototype.registerFilter=Model.registerFilter,/**
 * Holds registered filter
 * @type {Object}
 * @private
 */
Model.prototype.__registeredFilter={quicksearch:function(a,b,c){var d=XQCore.undotify(a,c),e=new RegExp(b.replace(/[a-z0-9äüöß]/g,"$&.*"),"i");return e.test(d)}},/**
 * Register validation metods for all Models
 *
 * @method registerValidation
 * @static
 * @param {String} type Data type
 * @param {Function} fn Validation function
 */
Model.registerValidation=function(a,b){var c="function"==typeof this?Model.prototype:this;c.__registeredValidations[a]=b},/**
 * Register new validation method for currentyl instanciated model
 *
 * @method registerValidation
 * @param {String} type Data type
 * @param {Function} fn Validation function
 */
Model.prototype.registerValidation=Model.registerValidation,/**
 * Stores registered validatiion functions
 * @type {Object}
 * @private
 */
Model.prototype.__registeredValidations={string:function(a,b){return b.convert&&"number"==typeof a&&(a=String(a)),"string"!=typeof a?{msg:"Property type is a "+typeof a+", but a string is required",errCode:11}:b.min&&b.min>a.length?{msg:"String length is too short",errCode:12}:b.max&&b.max<a.length?{msg:"String length is too long",errCode:13}:b.match&&!b.match.test(a)?{msg:"String doesn't match regexp",errCode:14}:void 0},number:function(a,b){return b.convert&&"string"==typeof a&&(a=parseInt(a,10)),"number"!=typeof a||isNaN(a)?{msg:"Property type is not a valid number",errCode:21}:b.min&&b.min>a?{msg:"Number is too low",errCode:22}:b.max&&b.max<a?{msg:"Number is too high",errCode:23}:void 0},date:function(a,b){if(a){var c=Date.parse(a);if(isNaN(c))return{msg:"Property isn't a valid date",errCode:31}}},array:function(a,b){return Array.isArray(a)?b.min&&b.min>a.length?{msg:"Array length is "+a.length+" but must be greater than "+b.min,errCode:42}:b.max&&b.max<a.length?{msg:"Array length is "+a.length+" but must be lesser than "+b.max,errCode:43}:void 0:{msg:"Property type is a "+typeof a+", but an array is required",errCode:41}},object:function(a,b){return"object"!=typeof a?{msg:"Property isn't a valid object",errCode:51}:void 0},objectid:function(a,b){return/^[a-zA-Z0-9]{24}$/.test(a)?void 0:{msg:"Property isn't a valid objectId",errCode:52}},"boolean":function(a,b){return"boolean"!=typeof a?{msg:"Property isn't a valid boolean",errCode:61}:void 0},/**
     * Validation type time
     *
     * Allowed values are:
     * HH:MM
     * HH:MM:SS
     * D:HH:MM:SS
     */
time:function(a,b){return/^\d+(:\d{2}){1,3}$/.test(a)?void 0:{msg:"Property isn't a valid time",errCode:71}},/**
     * Validation type email         *
     */
email:function(a,b){return/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)?void 0:{msg:"Property isn't a valid email",errCode:72}}},/**
 * Returns model as JSON
 * @method toJSON
 * @return {Object} Returns model data as JSON
 */
Model.prototype.toJSON=function(){return this.get()},
//--
module.exports=Model;var XQCore=require("./xqcore-core"),FireTPL=require("firetpl"),Tmpl={type:"firetpl",compile:FireTPL.compile,getTemplate:function(a,b){if(b=b||{},FireTPL.templateCache&&FireTPL.templateCache[a])return FireTPL.templateCache[a];if(FireTPL.loadFile){var c=b.viewDir||XQCore.viewsDir,d=FireTPL.readFile(c.replace(/\/$/,"")+"/"+a+"."+XQCore.viewExt.replace(/^\./,""));return FireTPL.compile(d,{eventAttrs:!0})}throw new Error("FireTPL runtime is being used. Please preload the "+a+"View")}};
//--
module.exports=Tmpl;var XQCore=require("./xqcore-core"),$=require("jquery"),log,View=function(a,b){
//Call Event constructor
XQCore.Event.call(this),"object"==typeof arguments[0]||"function"==typeof arguments[0]?(b=a,a=null):"string"==typeof arguments[0]&&(this.name=a),log=new XQCore.Logger(this.name+"View"),this.container="body",this.tag=void 0,this.className=void 0,this.id=void 0,this.mode="replace",this.autoInject=!0,this.__domReady=!1,this.__viewEvents=[];var c=this;"function"==typeof b?b.call(this,c):XQCore.extend(this,b),/**
     * Set view name
     * @public
     * @type {String}
     */
this.name=(this.name?this.name.replace(/View$/,""):"Nameless")+"View",this.__createView(),$(function(){c.container.length>0?(window.addEventListener("resize",function(a){c.resize(a)},!1),log.info("Initialize view "+this.name," with conf:",b),log.info(" ... using Container:",c.container)):log.error("Can't initialize View, Container not found!",c.container)})};XQCore.extend(View.prototype,XQCore.Event.prototype),/**
 * Show view if it is invisible
 *
 * @method show
 * @param {Boolean} hideOther Hide all other sibling views
 * @chainable
 * @fires view.show Fires a v`view.show` event
 * @returns {Object} Returns this value
 */
View.prototype.show=function(a){var b=this;return a&&b.$ct.children(".xq-view").each(function(){if(this!==b.el){var a=$(this).data("view");a.hide()}}),this.$el.show().removeClass("xq-hidden"),this.emit("view.show"),this},/**
 * Hide view
 * 
 * @method hide
 * @chainable
 * @fires view.hide Fires a v`view.hide` event
 * @return {Object} Returns this value
 */
View.prototype.hide=function(){return this.$el.hide().addClass("xq-hidden"),this.emit("view.hide"),this},/**
 * Marks a view as active, optionally inactivates all other sibling views
 *
 * @method active
 * @param {Boolean} inactivateOther Makes all other sibling views inactive
 * @chainable
 * @fires view.active Fires a v`view.active` event
 * @returns {Object} Returns this value
 */
View.prototype.active=function(a){var b=this;return a&&b.$ct.children(".xq-view").each(function(){if(this!==b.el){var a=$(this).data("view");a.inactive()}}),this.$el.addClass("xq-active").removeClass("xq-inactive"),this.emit("view.active"),this},/**
 * Marks a view as inactive
 * 
 * @method inactivate
 * @chainable
 * @fires view.inactive Fires a v`view.inactive` event
 * @return {Object} Returns this value
 */
View.prototype.inactive=function(){return this.$el.removeClass("xq-active").addClass("xq-inactive"),this.emit("view.inactive"),this},View.prototype.renderHTML=function(a,b){return log.log("Render html snippet",a,"with data:",b),(a="function"==typeof a?a:XQCore.Tmpl.compile(a))(b)},/**
 * To be called if window resizes
 * This is a placeholder method. Override this method if its needed
 *
 * @overridable
 * @return {Object} Returns this value
 */
View.prototype.resize=function(){return this},/**
 * Gets the data of an element
 *
 * @param {Object} selector DOM el or a jQuery selector of the element
 *
 * @return {Object} Returns the data of an element or null
 */
View.prototype.getElementData=function(a){var b=$(a,this.container);if(b.length){var c,d={},e=b.get(0).attributes;for(c=0;c<e.length;c++)if(0===e[c].name.indexOf("data-")){var f=e[c].name.substr(5),g=e[c].value;if("string"==typeof g)try{g="true"===g||"TRUE"===g?!0:"false"===g||"FALSE"===g?!1:"null"===g||"NULL"===g?null:"undefined"===g?void 0:+g+""===g?+g:JSON.parse(g)}catch(h){}d[f]=g}return d}return null},/**
 * If a validation failed (Automatically called in a coupled view)
 *
 * @method validationFailed
 * @param {Object} err Validation error object
 */
View.prototype.validationFailed=function(a,b){var c=this;a.forEach(function(a){c.$el.find('[name="'+a.property+'"]').addClass("xq-invalid")})},/**
 * If a validation succeeds (Automatically called in a coupled view)
 *
 * @method validationSucceeded
 * @param {String} name Input name
 * @param {String} value Input value
 */
View.prototype.validationSucceeded=function(a,b){var c=this;c.$el.find('[name="'+a+'"]').removeClass("xq-invalid")},/**
 * To be called when a state.change event from a coupled model was revived
 *
 * @param {String} state Model state
 * @override
 */
View.prototype.onStateChange=function(a){if(!this.el)return void(this.__initialState=a);var b=this.el.className.split(" ");b=b.filter(function(a){return!/^xq-state-/.test(a)}),b.push("xq-state-"+a),this.el.className=b.join(" ")},/**
 * Wait till view is ready
 *
 * @method ready
 * @param {Function} callback Callback
 */
View.prototype.ready=function(a){this.isReady?a.call(this):(this.__readyCallbacks||(this.__readyCallbacks=[]),this.__readyCallbacks.push(a))},View.prototype.__setReadyState=function(){var a=this;this.isReady=!0,this.__readyCallbacks&&(this.__readyCallbacks.forEach(function(b){b.call(a)}),this.__readyCallbacks=[])},/**
 * Inject element into the DOM
 *
 * @public
 * @method inject
 */
View.prototype.inject=function(){var a=this.isElementInDOM(this.ct);if(this.el.parentNode!==this.ct||!a)if(a||(this.$ct=$(this.container),this.ct=this.$ct.get(0)),log.info("Inject view into container",this.$ct),"replace"===this.mode){var b=this.$ct.contents();b.each(function(){var a=$(this).data("view");a?a.detach():$(this).detach()}),
// this.$ct.contents().detach();
this.$ct.append(this.$el)}else if("append"===this.mode)this.$ct.append(this.$el);else{if("prepend"!==this.mode)throw new Error("Unknown insert mode in view constructor");this.$ct.prepend(this.$el)}},/**
 * Parse a precompiled template and returns a html string
 *
 * @method parse
 *
 * @param {Function} template Precompiled template
 * @param {Object} data Data object
 *
 * @return {String} compiled html
 */
View.prototype.parse=function(a,b,c){var d,e;a.scopeStore={},a.scopes=c||{};try{d=a(b||{},a.scopes)}catch(f){d='<p class="renderError"><b>View render error!</b><br>'+f.message+"</p>",log.error("View render error!",f)}var g=function(b,c,d){b=$.parseHTML(b);var e=$(b),f=e.find("scope"),h={};return f.each(function(){var b,e=$(this).attr("id"),f=$(this).attr("path"),i=d?d+"."+f:f,j=c;if(Array.isArray(c)&&(h[f]=h[f]||0,j=c[h[f]++]),b={},e){var k=a.scopes[e](c[f],c);b.value=k?g(k,c[f],i):document.createTextNode(""),b.id=e}else b.value=$.parseHTML(c[f]);a.scopeStore[i]=a.scopeStore[i]||[],a.scopeStore[i].push(b),$(this).replaceWith($(b.value))}),e};return d&&(e=g(d,b)),e},/**
 * Render view
 *
 * @method render
 * @chainable
 * @emits content.change
 *
 * @param  {Object} data Render data
 * @returns {Object} Returns this value
 */
View.prototype._render=function(a){if(this.__domReady===!1)return this.__initialData=a||{},this;this.autoInject&&this.inject();var b;log.info("Render view template of view "+this.name,"with data:",a);var c="function"==typeof this.template?this.template:XQCore.Tmpl.compile(this.template);this.scopes={};try{b=c(a||{},this.scopes)}catch(d){b='<p class="renderError"><b>View render error!</b><br>'+d.message+"</p>",log.error("View render error!",d)}return this.el.innerHTML=b,this.emit("content.change",a),this.registerListener(this.$el),this.registerForms(),this},/**
 * Render view
 *
 * @method render
 * @chainable
 * @emits content.change
 *
 * @param  {Object} data Render data
 * @returns {Object} Returns this value
 */
View.prototype.render=function(a){if(this.__domReady===!1)return this.__initialData=a||{},this;this.autoInject&&this.inject();var b;log.info("Render view template of view "+this.name,"with data:",a);var c="function"==typeof this.template?this.template:XQCore.Tmpl.compile(this.template);this.scopes={dataFn:function(a,b){var c=b[a];return(null===c||void 0===c)&&(c=""),'<ftl path="'+a+'">'+c+"</ftl>"},scopeFn:function(a,b,c){return"data"===b&&Array.isArray(c)&&(b="_ftl_root"),'<ftl scope="'+a+'" path="'+b+'"></ftl>'},attrFn:function(a,b){var c=b.replace(/<ftl path="([a-zA-Z0-9_.-]+)">(.+?)<\/ftl>/g,function(a,b,c){return c}),d=b.replace(/<ftl path="([a-zA-Z0-9_.-]+)">(.+?)<\/ftl>/g,function(a,b,c){return"%s"}),e=a+'="'+c+'" xq-'+a+'="'+d+'"';return e}};try{b=c(a||{},this.scopes)}catch(d){b='<p class="renderError"><b>View render error!</b><br>'+d.message+"</p>",log.error("View render error!",d)}this.el.innerHTML=b;var e=this;
//Replace scopes
return this.scopesMap={},this.$el.find("ftl").each(function(){var b=$(this).attr("scope"),c=$(this).attr("path");b?e.replaceScopes($(this),b,a,c,c):e.replaceNode($(this),c)}),this.emit("content.change",a),this.registerListener(this.$el),this.registerForms(),this},View.prototype.replaceScopes=function(a,b,c,d,e){var f=this,g=d&&"_ftl_root"!==d?c[d]:c,h=f.scopes[b](g,c),i=$($.parseHTML(h)),j=a.parent();if(
//Replace scopes
i.find("ftl").each(function(){var a=$(this).attr("scope"),b=$(this).attr("path");a?f.replaceScopes($(this),a,g,b,e+(Array.isArray(g)?"[].":".")+b):f.replaceNode($(this),e+(Array.isArray(g)?"[].":".")+b)}),a.replaceWith(i),-1===e.indexOf("[].")){e in f.scopesMap||(f.scopesMap[e]=[]);var k=function(a){if(!Array.isArray(g))return[a];var b=a.length/g.length,c=[],d=[];return a.each(function(){d.push($(this).get(0)),d.length===b&&(c.push(d),d=[])}),c};f.scopesMap[e].push({type:"scope",fn:f.scopes[b],childs:k(i,g),parentData:c,parent:j})}},View.prototype.replaceNode=function(a,b){var c=this,d=a.html(),e=document.createTextNode(d);a.replaceWith(e),-1===b.indexOf("[].")&&(b in c.scopesMap||(c.scopesMap[b]=[]),c.scopesMap[b].push({type:"node",node:e}))},View.prototype.renderScope=function(a,b,c){var d=this,e=$.parseHTML(a.fn(c,a.parentData)),f=$(e);return f.find("ftl").each(function(){var a=$(this).attr("scope"),b=$(this).attr("path");a?d.replaceScopes($(this),a,c,b,b):d.replaceNode($(this),b)}),this.registerListener(f),f},View.prototype.renderNode=function(a,b,c){a.node.nodeValue=c},View.prototype.registerListener=function(a){var b=this;a.find("[on]").addBack("[on]").each(function(){var a,c=$(this),d=$(this).attr("on"),e=$(this).data();c.removeAttr("on"),d=d.split(";"),d.forEach(function(d){d=d.split(":"),a="submit"===d[0]?function(a){a.preventDefault(),e=b.serializeForm(a.target),e=b.onSubmit(e,a.target),b.emit(d[1],e,a)}:function(a){var c;a.originalEvent instanceof KeyboardEvent?c={key:a.key,code:a.keyCode,alt:a.altKey,ctrl:a.ctrlKey,meta:a.metaKey,shift:a.shiftKey}:a.originalEvent instanceof MouseEvent?(a.preventDefault(),c={button:a.button,alt:a.altKey,ctrl:a.ctrlKey,meta:a.metaKey,shift:a.shiftKey},"click"===a.type&&a.currentTarget.href&&(c.href=a.currentTarget.href)):(a.preventDefault(),c=a.currentTarget.value||""),b.emit(d[1],c,e,a)},c.bind(d[0],a)})})},/**
 * Serialize a form and return its values as JSON
 *
 * @param {Object} Form selector
 * @return {Object} FormData as JSON
 */
View.prototype.serializeForm=function(a){var b={},c=$(a);return"INPUT"!==c.get(0).tagName&&(c=c.find(":input")),c.serializeArray().forEach(function(a){XQCore.dedotify(b,a.name,a.value)}),log.info("Serialize form of view "+this.name,"form selector:",c,"form data:",b),b},/**
 * Insert a subset
 * @param  {String} path  Data path
 * @param  {Number} index Index after which item the insert should be happen or use -1 to prepend
 * @param  {Object} data  Item data
 */
View.prototype.insert=function(a,b,c){var d=this;a in this.scopesMap&&this.scopesMap[a].forEach(function(e){var f=d.renderScope(e,a,[c]);if(-1===b)e.parent.append(f),e.childs.push([f.get()]);else if(0===b)e.parent.prepend(f),e.childs.unshift([f.get()]);else{var g=e.childs[b];$(g[0]).before(f);var h=[b,0].concat([f.get()]);e.childs.splice.apply(e.childs,h)}})},View.prototype.update=function(a,b){log.warn("XQCore doesn`t support update events yet")},View.prototype.append=function(a,b){1===arguments.length&&(b=a,a="data"),this.insert(a,-1,b)},View.prototype.prepend=function(a,b){1===arguments.length&&(b=a,a="data"),this.insert(a,0,b)},/**
 * Remove an item from a subset. Removes the item with the given index.
 * If index is negative number it will be removed from the end
 * 
 * @param  {String} path  data path
 * @param  {Number} index Index of the item
 */
View.prototype.remove=function(a,b){a in this.scopesMap&&this.scopesMap[a].forEach(function(a){var c=a.childs[b];Array.isArray(c)?c.forEach(function(a){$(a).remove()}):$(c).remove(),a.childs.splice(b,1)})},View.prototype.removeLast=function(a){log.warn("XQCore doesn`t support pop events yet")},View.prototype.removeFirst=function(a){log.warn("XQCore doesn`t support shift events yet")},View.prototype.change=function(a,b){var c=this;this.ready(function(){a in this.scopesMap&&this.scopesMap[a].forEach(function(d){"node"===d.type&&c.renderNode(d,a,b)})})},/**
 * Seting up forms
 * It's wating till view is ready
 * @param  {Object} model Coupled model
 * @param  {Object} $el   Form element
 */
View.prototype.formSetup=function(a,b){var c=this;this.ready(function(){
// var errClassName = 'xq-invalid',
// disabledClass = 'xq-disabled';
// if (!$el) {
//     $el = this.$el.find('form');
// }
var a=function(a){var b=a.target.value,d=a.target.name;c.emit("input.change",d,b)},b=function(a){var b=a.target.value,d=a.target.name;c.emit("input.edit",d,b)},d=function(a){a.preventDefault();var b=c.serializeForm(a.target);c.emit("form.submit",b)};this.addEvent(":input","change",a),this.addEvent(":input","keyup",b),this.addEvent("form","submit",d)})},/**
 * Called on submiting a form. 
 * 
 * @method onSubmit
 * @param {Object} data Form data
 * @param {Object} $form jQuery selector of the submited form
 * @returns {Object} Changed form data
 */
View.prototype.onSubmit=function(a,b){return a},/**
 * Removes a view from dom but does not unreister its DOM event listener.
 * This is usefull if you wish to add this view later back into the DOM.
 * Uncouples itself from a coupled model or list.
 *
 * @method  detach
 *
 * @fires view.detach Fires a `view.detach` event before view is removing from dom.
 * @return {[type]} [description]
 */
View.prototype.detach=function(){log.info("Destroy view"),this.emit("view.detach"),this.$el.detach(),this.__coupled&&(
//Uncouple other participate
this.__coupled.obj.__coupled&&this.__coupled.obj.__coupled.obj===this&&this.__coupled.obj.__coupled.uncouple(),this.__coupled.uncouple()),
//TODO remove all events
log.info("View "+this.name+" has been destroyed")},/**
 * Removes a view from dom and unregisters all its listener
 *
 * @fires view.destroy Fires a `view.destroy` event before view is removing from dom.
 * @return {[type]} [description]
 */
View.prototype.destroy=function(){log.info("Destroy view"),this.emit("view.destroy"),this.$el.remove(),this.__coupled&&(
//Uncouple other participate
this.__coupled.obj.__coupled&&this.__coupled.obj.__coupled.obj===this&&this.__coupled.obj.__coupled.uncouple(),this.__coupled.uncouple()),
//TODO remove all events
log.info("View "+this.name+" has been destroyed")},/**
 * Register a DOM event listerner for a given element. The DOM element mustnt exists at this time. (Using jQuery.deleget() on the this.$el element)
 * @param {String}   selector A selector to the item that should trigger the event
 * @param {String}   events   A string of on ore more Javascript event handler. Use a space separated list for mor then one event. E.g: 'click mousedown'
 * @param {Function} callback Callback function to be called when event is triggered
 */
View.prototype.addEvent=function(a,b,c){this.__viewEvents.push({events:b,selector:a,callback:c}),this.$el&&this.$el.delegate(a,b,c)},/**
 * Defines a container -> view tag type mapping
 * 
 * @private true
 * @type {Object}
 */
View.prototype.__viewTagTypes={"*":"div",body:"section",section:"section",ul:"li",table:"tbody",tbody:"tr",tr:"td"},/**
 * Creates new view element, based on *tag* option
 * 
 * @private true
 * @return {object} Returns a DOM element
 */
View.prototype.__createViewElement=function(){if(this.tag)return document.createElement(this.tag);var a=this.ct?this.ct.tagName.toLowerCase():"*",b=this.__viewTagTypes["*"];return this.__viewTagTypes[a]&&(b=this.__viewTagTypes[a]),document.createElement(b)},/**
 * Creates a view and registers event listeners as soon as DOM is ready.
 *
 * @private true
 */
View.prototype.__createView=function(){var a=this,b=[];$(function(){
//Create view element
a.$ct=a.$ct||$(a.container),a.ct=a.$ct.get(0),a.el=a.__createViewElement(),a.$el=$(a.el),a.$el.data("view",a),b.push("xq-view xq-"+a.name.replace(/View$/,"-view").toLowerCase()),a.id&&a.el.setAttribute("id",a.id),a.className&&b.push(a.className),a.hidden===!0&&(b.push("xq-hidden"),a.$el.hide()),a.el.className=b.join(" "),
//Set DOM ready state
a.__domReady=!0,a.__initialData&&(a.render(a.__initialData),delete a.__initialData),
// if (self.autoInject) {
//     self.inject();
// }
//Set ready state
a.__setReadyState(),a.registerListener(a.$el),
//Register view listener
XQCore.html5Routes&&a.$el.on("click","a",function(b){/^http(s)?:\/\//.test(b.currentTarget.href)||/^\/?[a-z]/.test(b.currentTarget.href)&&(b.preventDefault(),b.stopPropagation(),a.emit("xqcore.navigate",b.currentTarget.href))}),a.forms&&a.formSetup(),a.__initialState&&(a.onStateChange(a.__initialState),delete a.__initialState)})},View.prototype.registerForms=function(){if(this.forms){var a="form";"string"==typeof this.forms&&(a=this.forms),this.ready(function(){this.$forms=this.$el.find(a),this.$forms.addClass("xq-forms"),this.$forms.find(":input").addClass("xq-input")})}},/**
 * Checks whether an element is in the DOM or not.
 *
 * @private
 * @param  {Object}  el DOM element wich sholld be checked
 * @return {Boolean}    Returns true if element is still in the DOM
 */
View.prototype.isElementInDOM=function(a){for(;a;){if(a===document.body)return!0;a=a.parentNode}return!1},
//--
module.exports=View;var XQCore=require("./xqcore-core"),$=require("jquery"),log=new XQCore.Logger("Router"),pathToRegExp=function(a,b){return a=a.concat("/?").replace(/\/\(/g,"(?:/").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?|\*/g,function(a,c,d,e,f,g){return"*"===a?(b.push(void 0),a):(b.push(e),c=c||"",""+(g?"":c)+"(?:"+(g?c:"")+(d||"")+(f||"([^/]+?)")+")"+(g||""))}).replace(/([\/.])/g,"\\$1").replace(/\*/g,"(.*)"),new RegExp("^"+a+"$","i")},Route=function(a){var b,c,d=[];return log.logLevel=XQCore.logLevel,a instanceof RegExp?(c=a,b=a.toString()):(c=pathToRegExp(a,d),b=a),{re:c,src:a.toString(),keys:d}},match=function(a,b,c){for(var d,e=c||0,f=a.length;f>e;++e){var g=a[e],h=g.re,i=g.keys,j=[],k={};if(d=b.match(h)){for(var l=1,m=d.length;m>l;++l){var n=i[l-1],o="string"==typeof d[l]?unescape(d[l]):d[l];n?k[n]=o:j.push(o)}return{params:k,splats:j,route:g.src,next:e+1}}}},Router=function(a){a=a||{},this.routes=[],this.routeMap={},a.noListener||this.registerListener();var b=this;$(function(){
//Call current page
b.callRoute(b.getPath(),{initialCall:!0})})},instance;/**
 * Returns a singelton instance of XQCore.Router
 * @return {[type]} [description]
 */
Router.getInstance=function(){return instance||(instance=new XQCore.Router),instance},Router.prototype.registerListener=function(){XQCore.html5Routes?window.addEventListener("popstate",this.onPopStateHandler.bind(this)):window.addEventListener("hashchange",this.onPopStateHandler.bind(this))},Router.prototype.onPopStateHandler=function(a){var b=this.getPath();this.callRoute(b,{noPush:!0})},Router.prototype.getPath=function(){var a;return XQCore.html5Routes?(a=location.pathname,a.replace(new RegExp("^"+XQCore.basePath),"")):(a=location.hash,a=a.replace(new RegExp("^"+XQCore.hashBang),""),a="/"+a)},/**
 * Registers a new route
 *
 * @method addRoute
 * @param {String}   path Route path
 * @param {Function} fn   Function to be called when addRoute will be called
 * @returns {Object} Returns this value
 * @chainable
 */
Router.prototype.addRoute=function(a,b){if(log.info("Register new route:",a,b),!a)throw new Error(" route requires a path");if(!b)throw new Error(" route "+a.toString()+" requires a callback");if(this.routeMap[a])throw new Error("path is already defined: "+a);"string"==typeof a&&(a=a.replace(/\/$/,""),"/"!==a.charAt(0)&&(a="/"+a));var c=new Route(a);return c.fn=b,this.routes.push(c),this.routeMap[a]=b,this},/**
 * Removes a route
 *
 * @method removeRoute
 * @param  {String} path Path to be removed
 * @return {Object}      Returns this value
 * @chainable
 */
Router.prototype.removeRoute=function(a){if(!a)throw new Error(" route requires a path");if(!this.routeMap[a])return log.warn("Can not remove route! Route does not exists: "+a),this;for(var b=0;b<this.routes.length;b++){var c=this.routes[b];c.src===a&&this.routes.splice(b,1)}return delete this.routeMap[a],this},Router.prototype.match=function(a,b){var c=match(this.routes,a,b);return c&&(c.fn=this.routeMap[c.route],c.next=this.match.bind(this,a,c.next)),c},/**
 * Calls a route
 *
 * Options:
 * --------
 * **noRoute** Doesn't add a push state item
 * **replace** Add a replace state item
 * 
 *
 * @method callRoute
 * @param  {String} path Route path
 * @param {Object} [options] Set options for route call
 * 
 */
Router.prototype.callRoute=function(a,b){if(b=b||{},log.info("Call route",a),void 0===a)throw new Error("XQCore.Router error! Path is undefined in callRoute()!");var c=this.match(a);if(!c)return void log.warn("Could not call any route! No route were found! Called path: "+a);c.path=a,c.initialCall=!!b.initialCall,!XQCore.html5Routes||b.noPush||b.replace?XQCore.html5Routes&&b.replace&&history.replaceState(null,"",a):history.pushState(null,"",a);var d=function(){log.info("... trigger route",this.route,this.fn,this.next),this.fn.call(this,this.params,this.splats,function(){var a=this.next();a&&d.call(a)}.bind(this))};d.call(c)},module.exports=Router;var XQCore=require("./xqcore-core"),log=new XQCore.Logger("SocketConnection"),SockJS=function(){/* SockJS client, version 0.3.4, http://sockjs.org, MIT License

    Copyright (c) 2011-2012 VMware, Inc.

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOF THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
    */
// JSON2 by Douglas Crockford (minified).
var JSON;
//     [*] Including lib/index.js
// Public object
return JSON||(JSON={}),function(){function str(a,b){var c,d,e,f,g,h=gap,i=b[a];switch(i&&"object"==typeof i&&"function"==typeof i.toJSON&&(i=i.toJSON(a)),"function"==typeof rep&&(i=rep.call(b,a,i)),typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";if(gap+=indent,g=[],"[object Array]"===Object.prototype.toString.apply(i)){for(f=i.length,c=0;f>c;c+=1)g[c]=str(c,i)||"null";return e=0===g.length?"[]":gap?"[\n"+gap+g.join(",\n"+gap)+"\n"+h+"]":"["+g.join(",")+"]",gap=h,e}if(rep&&"object"==typeof rep)for(f=rep.length,c=0;f>c;c+=1)"string"==typeof rep[c]&&(d=rep[c],e=str(d,i),e&&g.push(quote(d)+(gap?": ":":")+e));else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&g.push(quote(d)+(gap?": ":":")+e));return e=0===g.length?"{}":gap?"{\n"+gap+g.join(",\n"+gap)+"\n"+h+"}":"{"+g.join(",")+"}",gap=h,e}}function quote(a){return escapable.lastIndex=0,escapable.test(a)?'"'+a.replace(escapable,function(a){var b=meta[a];return"string"==typeof b?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function f(a){return 10>a?"0"+a:a}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(a){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(a){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;"function"!=typeof JSON.stringify&&(JSON.stringify=function(a,b,c){var d;if(gap="",indent="","number"==typeof c)for(d=0;c>d;d+=1)indent+=" ";else"string"==typeof c&&(indent=c);if(rep=b,!b||"function"==typeof b||"object"==typeof b&&"number"==typeof b.length)return str("",{"":a});throw new Error("JSON.stringify")}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&"object"==typeof e)for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),void 0!==d?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),SockJS=function(){var a=document,b=window,c={},d=function(){};d.prototype.addEventListener=function(a,b){this._listeners||(this._listeners={}),a in this._listeners||(this._listeners[a]=[]);var d=this._listeners[a];-1===c.arrIndexOf(d,b)&&d.push(b)},d.prototype.removeEventListener=function(a,b){if(this._listeners&&a in this._listeners){var d=this._listeners[a],e=c.arrIndexOf(d,b);return-1!==e?void(d.length>1?this._listeners[a]=d.slice(0,e).concat(d.slice(e+1)):delete this._listeners[a]):void 0}},d.prototype.dispatchEvent=function(a){var b=a.type,c=Array.prototype.slice.call(arguments,0);if(this["on"+b]&&this["on"+b].apply(this,c),this._listeners&&b in this._listeners)for(var d=0;d<this._listeners[b].length;d++)this._listeners[b][d].apply(this,c)};
//         [*] End of lib/reventtarget.js
//         [*] Including lib/simpleevent.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var e=function(a,b){if(this.type=a,"undefined"!=typeof b)for(var c in b)b.hasOwnProperty(c)&&(this[c]=b[c])};e.prototype.toString=function(){var a=[];for(var b in this)if(this.hasOwnProperty(b)){var c=this[b];"function"==typeof c&&(c="[function]"),a.push(b+"="+c)}return"SimpleEvent("+a.join(", ")+")"};
//         [*] End of lib/simpleevent.js
//         [*] Including lib/eventemitter.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var f=function(a){var b=this;b._events=a||[],b._listeners={}};f.prototype.emit=function(a){var b=this;if(b._verifyType(a),!b._nuked){var c=Array.prototype.slice.call(arguments,1);if(b["on"+a]&&b["on"+a].apply(b,c),a in b._listeners)for(var d=0;d<b._listeners[a].length;d++)b._listeners[a][d].apply(b,c)}},f.prototype.on=function(a,b){var c=this;c._verifyType(a),c._nuked||(a in c._listeners||(c._listeners[a]=[]),c._listeners[a].push(b))},f.prototype._verifyType=function(a){var b=this;-1===c.arrIndexOf(b._events,a)&&c.log("Event "+JSON.stringify(a)+" not listed "+JSON.stringify(b._events)+" in "+b)},f.prototype.nuke=function(){var a=this;a._nuked=!0;for(var b=0;b<a._events.length;b++)delete a[a._events[b]];a._listeners={}};
//         [*] End of lib/eventemitter.js
//         [*] Including lib/utils.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var g="abcdefghijklmnopqrstuvwxyz0123456789_";c.random_string=function(a,b){b=b||g.length;var c,d=[];for(c=0;a>c;c++)d.push(g.substr(Math.floor(Math.random()*b),1));return d.join("")},c.random_number=function(a){return Math.floor(Math.random()*a)},c.random_number_string=function(a){var b=(""+(a-1)).length,d=Array(b+1).join("0");return(d+c.random_number(a)).slice(-b)},
// Assuming that url looks like: http://asdasd:111/asd
c.getOrigin=function(a){a+="/";var b=a.split("/").slice(0,3);return b.join("/")},c.isSameOriginUrl=function(a,c){
// location.origin would do, but it's not always available.
return c||(c=b.location.href),a.split("/").slice(0,3).join("/")===c.split("/").slice(0,3).join("/")},c.getParentDomain=function(a){
// ipv4 ip address
if(/^[0-9.]*$/.test(a))return a;
// ipv6 ip address
if(/^\[/.test(a))return a;
// no dots
if(!/[.]/.test(a))return a;var b=a.split(".").slice(1);return b.join(".")},c.objectExtend=function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a};var h="_jp";c.polluteGlobalNamespace=function(){h in b||(b[h]={})},c.closeFrame=function(a,b){return"c"+JSON.stringify([a,b])},c.userSetCode=function(a){return 1e3===a||a>=3e3&&4999>=a},
// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
// and RFC 2988.
c.countRTO=function(a){var b;return b=a>100?3*a:a+200},c.log=function(){b.console&&console.log&&console.log.apply&&console.log.apply(console,arguments)},c.bind=function(a,b){return a.bind?a.bind(b):function(){return a.apply(b,arguments)}},c.flatUrl=function(a){return-1===a.indexOf("?")&&-1===a.indexOf("#")},c.amendUrl=function(b){var d=a.location;if(!b)throw new Error("Wrong url for SockJS");if(!c.flatUrl(b))throw new Error("Only basic urls are supported in SockJS");
//  '//abc' --> 'http://abc'
// '/abc' --> 'http://localhost:80/abc'
// strip trailing slashes
return 0===b.indexOf("//")&&(b=d.protocol+b),0===b.indexOf("/")&&(b=d.protocol+"//"+d.host+b),b=b.replace(/[\/]+$/,"")},
// IE doesn't support [].indexOf.
c.arrIndexOf=function(a,b){for(var c=0;c<a.length;c++)if(a[c]===b)return c;return-1},c.arrSkip=function(a,b){var d=c.arrIndexOf(a,b);if(-1===d)return a.slice();var e=a.slice(0,d);return e.concat(a.slice(d+1))},
// Via: https://gist.github.com/1133122/2121c601c5549155483f50be3da5305e83b8c5df
c.isArray=Array.isArray||function(a){return{}.toString.call(a).indexOf("Array")>=0},c.delay=function(a,b){return"function"==typeof a&&(b=a,a=0),setTimeout(b,a)};
// Chars worth escaping, as defined by Douglas Crockford:
//   https://github.com/douglascrockford/JSON-js/blob/47a9882cddeb1e8529e07af9736218075372b8ac/json2.js#L196
var i,j=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,k={"\x00":"\\u0000","":"\\u0001","":"\\u0002","":"\\u0003","":"\\u0004","":"\\u0005","":"\\u0006","":"\\u0007","\b":"\\b","	":"\\t","\n":"\\n","":"\\u000b","\f":"\\f","\r":"\\r","":"\\u000e","":"\\u000f","":"\\u0010","":"\\u0011","":"\\u0012","":"\\u0013","":"\\u0014","":"\\u0015","":"\\u0016","":"\\u0017","":"\\u0018","":"\\u0019","":"\\u001a","":"\\u001b","":"\\u001c","":"\\u001d","":"\\u001e","":"\\u001f",'"':'\\"',"\\":"\\\\","":"\\u007f","":"\\u0080","":"\\u0081","":"\\u0082","":"\\u0083","":"\\u0084","":"\\u0085","":"\\u0086","":"\\u0087","":"\\u0088","":"\\u0089","":"\\u008a","":"\\u008b","":"\\u008c","":"\\u008d","":"\\u008e","":"\\u008f","":"\\u0090","":"\\u0091","":"\\u0092","":"\\u0093","":"\\u0094","":"\\u0095","":"\\u0096","":"\\u0097","":"\\u0098","":"\\u0099","":"\\u009a","":"\\u009b","":"\\u009c","":"\\u009d","":"\\u009e","":"\\u009f","­":"\\u00ad","؀":"\\u0600","؁":"\\u0601","؂":"\\u0602","؃":"\\u0603","؄":"\\u0604","܏":"\\u070f","឴":"\\u17b4","឵":"\\u17b5","‌":"\\u200c","‍":"\\u200d","‎":"\\u200e","‏":"\\u200f","\u2028":"\\u2028","\u2029":"\\u2029","‪":"\\u202a","‫":"\\u202b","‬":"\\u202c","‭":"\\u202d","‮":"\\u202e"," ":"\\u202f","⁠":"\\u2060","⁡":"\\u2061","⁢":"\\u2062","⁣":"\\u2063","⁤":"\\u2064","⁥":"\\u2065","⁦":"\\u2066","⁧":"\\u2067","⁨":"\\u2068","⁩":"\\u2069","⁪":"\\u206a","⁫":"\\u206b","⁬":"\\u206c","⁭":"\\u206d","⁮":"\\u206e","⁯":"\\u206f","\ufeff":"\\ufeff","￰":"\\ufff0","￱":"\\ufff1","￲":"\\ufff2","￳":"\\ufff3","￴":"\\ufff4","￵":"\\ufff5","￶":"\\ufff6","￷":"\\ufff7","￸":"\\ufff8","￹":"\\ufff9","￺":"\\ufffa","￻":"\\ufffb","￼":"\\ufffc","�":"\\ufffd","￾":"\\ufffe","￿":"\\uffff"},l=/[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g,m=JSON&&JSON.stringify||function(a){return j.lastIndex=0,j.test(a)&&(a=a.replace(j,function(a){return k[a]})),'"'+a+'"'},n=function(a){var b,c={},d=[];for(b=0;65536>b;b++)d.push(String.fromCharCode(b));return a.lastIndex=0,d.join("").replace(a,function(a){return c[a]="\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4),""}),a.lastIndex=0,c};
// Quote string, also taking care of unicode characters that browsers
// often break. Especially, take care of unicode surrogates:
//    http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates
c.quote=function(a){var b=m(a);
// In most cases this should be very fast and good enough.
return l.lastIndex=0,l.test(b)?(i||(i=n(l)),b.replace(l,function(a){return i[a]})):b};var o=["websocket","xdr-streaming","xhr-streaming","iframe-eventsource","iframe-htmlfile","xdr-polling","xhr-polling","iframe-xhr-polling","jsonp-polling"];c.probeProtocols=function(){for(var a={},b=0;b<o.length;b++){var c=o[b];
// User can have a typo in protocol name.
a[c]=y[c]&&y[c].enabled()}return a},c.detectProtocols=function(a,b,c){var d={},e=[];b||(b=o);for(var f=0;f<b.length;f++){var g=b[f];d[g]=a[g]}var h=function(a){var b=a.shift();d[b]?e.push(b):a.length>0&&h(a)};
// 1. Websocket
// 2. Streaming
// 3. Polling
return c.websocket!==!1&&h(["websocket"]),d["xhr-streaming"]&&!c.null_origin?e.push("xhr-streaming"):!d["xdr-streaming"]||c.cookie_needed||c.null_origin?h(["iframe-eventsource","iframe-htmlfile"]):e.push("xdr-streaming"),d["xhr-polling"]&&!c.null_origin?e.push("xhr-polling"):!d["xdr-polling"]||c.cookie_needed||c.null_origin?h(["iframe-xhr-polling","jsonp-polling"]):e.push("xdr-polling"),e};
//         [*] End of lib/utils.js
//         [*] Including lib/dom.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
// May be used by htmlfile jsonp and transports.
var p="_sockjs_global";c.createHook=function(){var a="a"+c.random_string(8);if(!(p in b)){var d={};b[p]=function(a){return a in d||(d[a]={id:a,del:function(){delete d[a]}}),d[a]}}return b[p](a)},c.attachMessage=function(a){c.attachEvent("message",a)},c.attachEvent=function(c,d){"undefined"!=typeof b.addEventListener?b.addEventListener(c,d,!1):(
// IE quirks.
// According to: http://stevesouders.com/misc/test-postmessage.php
// the message gets delivered only to 'document', not 'window'.
a.attachEvent("on"+c,d),
// I get 'window' for ie8.
b.attachEvent("on"+c,d))},c.detachMessage=function(a){c.detachEvent("message",a)},c.detachEvent=function(c,d){"undefined"!=typeof b.addEventListener?b.removeEventListener(c,d,!1):(a.detachEvent("on"+c,d),b.detachEvent("on"+c,d))};var q={},r=!1,s=function(){for(var a in q)q[a](),delete q[a]},t=function(){r||(r=!0,s())};
// 'unload' alone is not reliable in opera within an iframe, but we
// can't use `beforeunload` as IE fires it on javascript: links.
c.attachEvent("unload",t),c.unload_add=function(a){var b=c.random_string(8);return q[b]=a,r&&c.delay(s),b},c.unload_del=function(a){a in q&&delete q[a]},c.createIframe=function(b,d){var e,f,g=a.createElement("iframe"),h=function(){clearTimeout(e);
// Explorer had problems with that.
try{g.onload=null}catch(a){}g.onerror=null},i=function(){g&&(h(),
// This timeout makes chrome fire onbeforeunload event
// within iframe. Without the timeout it goes straight to
// onunload.
setTimeout(function(){g&&g.parentNode.removeChild(g),g=null},0),c.unload_del(f))},j=function(a){g&&(i(),d(a))},k=function(a,b){try{
// When the iframe is not loaded, IE raises an exception
// on 'contentWindow'.
g&&g.contentWindow&&g.contentWindow.postMessage(a,b)}catch(c){}};return g.src=b,g.style.display="none",g.style.position="absolute",g.onerror=function(){j("onerror")},g.onload=function(){
// `onload` is triggered before scripts on the iframe are
// executed. Give it few seconds to actually load stuff.
clearTimeout(e),e=setTimeout(function(){j("onload timeout")},2e3)},a.body.appendChild(g),e=setTimeout(function(){j("timeout")},15e3),f=c.unload_add(i),{post:k,cleanup:i,loaded:h}},c.createHtmlfile=function(a,d){var e,f,g,i=new ActiveXObject("htmlfile"),j=function(){clearTimeout(e)},k=function(){i&&(j(),c.unload_del(f),g.parentNode.removeChild(g),g=i=null,CollectGarbage())},l=function(a){i&&(k(),d(a))},m=function(a,b){try{
// When the iframe is not loaded, IE raises an exception
// on 'contentWindow'.
g&&g.contentWindow&&g.contentWindow.postMessage(a,b)}catch(c){}};i.open(),i.write('<html><script>document.domain="'+document.domain+'";</script></html>'),i.close(),i.parentWindow[h]=b[h];var n=i.createElement("div");return i.body.appendChild(n),g=i.createElement("iframe"),n.appendChild(g),g.src=a,e=setTimeout(function(){l("timeout")},15e3),f=c.unload_add(k),{post:m,cleanup:k,loaded:j}};
//         [*] End of lib/dom.js
//         [*] Including lib/dom2.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var u=function(){};u.prototype=new f(["chunk","finish"]),u.prototype._start=function(a,d,e,f){var g=this;try{g.xhr=new XMLHttpRequest}catch(h){}if(!g.xhr)try{g.xhr=new b.ActiveXObject("Microsoft.XMLHTTP")}catch(h){}(b.ActiveXObject||b.XDomainRequest)&&(
// IE8 caches even POSTs
d+=(-1===d.indexOf("?")?"?":"&")+"t="+ +new Date),
// Explorer tends to keep connection open, even after the
// tab gets closed: http://bugs.jquery.com/ticket/5280
g.unload_ref=c.unload_add(function(){g._cleanup(!0)});try{g.xhr.open(a,d,!0)}catch(i){
// IE raises an exception on wrong port.
return g.emit("finish",0,""),void g._cleanup()}if(f&&f.no_credentials||(
// Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
// "This never affects same-site requests."
g.xhr.withCredentials="true"),f&&f.headers)for(var j in f.headers)g.xhr.setRequestHeader(j,f.headers[j]);g.xhr.onreadystatechange=function(){if(g.xhr){var a=g.xhr;switch(a.readyState){case 3:
// IE doesn't like peeking into responseText or status
// on Microsoft.XMLHTTP and readystate=3
try{var b=a.status,c=a.responseText}catch(a){}
// IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
1223===b&&(b=204),
// IE does return readystate == 3 for 404 answers.
c&&c.length>0&&g.emit("chunk",b,c);break;case 4:var b=a.status;
// IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
1223===b&&(b=204),g.emit("finish",b,a.responseText),g._cleanup(!1)}}},g.xhr.send(e)},u.prototype._cleanup=function(a){var b=this;if(b.xhr){if(c.unload_del(b.unload_ref),
// IE needs this field to be a function
b.xhr.onreadystatechange=function(){},a)try{b.xhr.abort()}catch(d){}b.unload_ref=b.xhr=null}},u.prototype.close=function(){var a=this;a.nuke(),a._cleanup(!0)};var v=c.XHRCorsObject=function(){var a=this,b=arguments;c.delay(function(){a._start.apply(a,b)})};v.prototype=new u;var w=c.XHRLocalObject=function(a,b,d){var e=this;c.delay(function(){e._start(a,b,d,{no_credentials:!0})})};w.prototype=new u;
// References:
//   http://ajaxian.com/archives/100-line-ajax-wrapper
//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx
var x=c.XDRObject=function(a,b,d){var e=this;c.delay(function(){e._start(a,b,d)})};x.prototype=new f(["chunk","finish"]),x.prototype._start=function(a,b,d){var e=this,f=new XDomainRequest;
// IE caches even POSTs
b+=(-1===b.indexOf("?")?"?":"&")+"t="+ +new Date;var g=f.ontimeout=f.onerror=function(){e.emit("finish",0,""),e._cleanup(!1)};f.onprogress=function(){e.emit("chunk",200,f.responseText)},f.onload=function(){e.emit("finish",200,f.responseText),e._cleanup(!1)},e.xdr=f,e.unload_ref=c.unload_add(function(){e._cleanup(!0)});try{
// Fails with AccessDenied if port number is bogus
e.xdr.open(a,b),e.xdr.send(d)}catch(h){g()}},x.prototype._cleanup=function(a){var b=this;if(b.xdr){if(c.unload_del(b.unload_ref),b.xdr.ontimeout=b.xdr.onerror=b.xdr.onprogress=b.xdr.onload=null,a)try{b.xdr.abort()}catch(d){}b.unload_ref=b.xdr=null}},x.prototype.close=function(){var a=this;a.nuke(),a._cleanup(!0)},
// 1. Is natively via XHR
// 2. Is natively via XDR
// 3. Nope, but postMessage is there so it should work via the Iframe.
// 4. Nope, sorry.
c.isXHRCorsCapable=function(){
// XDomainRequest doesn't work if page is served from file://
return b.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest?1:b.XDomainRequest&&a.domain?2:L.enabled()?3:4};
//         [*] End of lib/dom2.js
//         [*] Including lib/sockjs.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var y=function(a,d,e){if(this===b)
// makes `new` optional
return new y(a,d,e);var f,g=this;g._options={devel:!1,debug:!1,protocols_whitelist:[],info:void 0,rtt:void 0},e&&c.objectExtend(g._options,e),g._base_url=c.amendUrl(a),g._server=g._options.server||c.random_number_string(1e3),g._options.protocols_whitelist&&g._options.protocols_whitelist.length?f=g._options.protocols_whitelist:(
// Deprecated API
f="string"==typeof d&&d.length>0?[d]:c.isArray(d)?d:null,f&&g._debug('Deprecated API: Use "protocols_whitelist" option instead of supplying protocol list as a second parameter to SockJS constructor.')),g._protocols=[],g.protocol=null,g.readyState=y.CONNECTING,g._ir=S(g._base_url),g._ir.onfinish=function(a,b){g._ir=null,a?(g._options.info&&(
// Override if user supplies the option
a=c.objectExtend(a,g._options.info)),g._options.rtt&&(b=g._options.rtt),g._applyInfo(a,b,f),g._didClose()):g._didClose(1002,"Can't connect to server",!0)}};
// Inheritance
y.prototype=new d,y.version="0.3.4",y.CONNECTING=0,y.OPEN=1,y.CLOSING=2,y.CLOSED=3,y.prototype._debug=function(){this._options.debug&&c.log.apply(c,arguments)},y.prototype._dispatchOpen=function(){var a=this;a.readyState===y.CONNECTING?(a._transport_tref&&(clearTimeout(a._transport_tref),a._transport_tref=null),a.readyState=y.OPEN,a.dispatchEvent(new e("open"))):
// The server might have been restarted, and lost track of our
// connection.
a._didClose(1006,"Server lost session")},y.prototype._dispatchMessage=function(a){var b=this;b.readyState===y.OPEN&&b.dispatchEvent(new e("message",{data:a}))},y.prototype._dispatchHeartbeat=function(a){var b=this;b.readyState===y.OPEN&&b.dispatchEvent(new e("heartbeat",{}))},y.prototype._didClose=function(a,b,d){var f=this;if(f.readyState!==y.CONNECTING&&f.readyState!==y.OPEN&&f.readyState!==y.CLOSING)throw new Error("INVALID_STATE_ERR");f._ir&&(f._ir.nuke(),f._ir=null),f._transport&&(f._transport.doCleanup(),f._transport=null);var g=new e("close",{code:a,reason:b,wasClean:c.userSetCode(a)});if(!c.userSetCode(a)&&f.readyState===y.CONNECTING&&!d){if(f._try_next_protocol(g))return;g=new e("close",{code:2e3,reason:"All transports failed",wasClean:!1,last_event:g})}f.readyState=y.CLOSED,c.delay(function(){f.dispatchEvent(g)})},y.prototype._didMessage=function(a){var b=this,c=a.slice(0,1);switch(c){case"o":b._dispatchOpen();break;case"a":for(var d=JSON.parse(a.slice(1)||"[]"),e=0;e<d.length;e++)b._dispatchMessage(d[e]);break;case"m":var d=JSON.parse(a.slice(1)||"null");b._dispatchMessage(d);break;case"c":var d=JSON.parse(a.slice(1)||"[]");b._didClose(d[0],d[1]);break;case"h":b._dispatchHeartbeat()}},y.prototype._try_next_protocol=function(b){var d=this;for(d.protocol&&(d._debug("Closed transport:",d.protocol,""+b),d.protocol=null),d._transport_tref&&(clearTimeout(d._transport_tref),d._transport_tref=null);;){var e=d.protocol=d._protocols.shift();if(!e)return!1;
// Some protocols require access to `body`, what if were in
// the `head`?
if(y[e]&&y[e].need_body===!0&&(!a.body||"undefined"!=typeof a.readyState&&"complete"!==a.readyState))return d._protocols.unshift(e),d.protocol="waiting-for-load",c.attachEvent("load",function(){d._try_next_protocol()}),!0;if(y[e]&&y[e].enabled(d._options)){var f=y[e].roundTrips||1,g=(d._options.rto||0)*f||5e3;d._transport_tref=c.delay(g,function(){d.readyState===y.CONNECTING&&
// I can't understand how it is possible to run
// this timer, when the state is CLOSED, but
// apparently in IE everythin is possible.
d._didClose(2007,"Transport timeouted")});var h=c.random_string(8),i=d._base_url+"/"+d._server+"/"+h;return d._debug("Opening transport:",e," url:"+i," RTO:"+d._options.rto),d._transport=new y[e](d,i,d._base_url),!0}d._debug("Skipping transport:",e)}},y.prototype.close=function(a,b){var d=this;if(a&&!c.userSetCode(a))throw new Error("INVALID_ACCESS_ERR");return d.readyState!==y.CONNECTING&&d.readyState!==y.OPEN?!1:(d.readyState=y.CLOSING,d._didClose(a||1e3,b||"Normal closure"),!0)},y.prototype.send=function(a){var b=this;if(b.readyState===y.CONNECTING)throw new Error("INVALID_STATE_ERR");return b.readyState===y.OPEN&&b._transport.doSend(c.quote(""+a)),!0},y.prototype._applyInfo=function(b,d,e){var f=this;f._options.info=b,f._options.rtt=d,f._options.rto=c.countRTO(d),f._options.info.null_origin=!a.domain;var g=c.probeProtocols();f._protocols=c.detectProtocols(g,e,b)};
//         [*] End of lib/sockjs.js
//         [*] Including lib/trans-websocket.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var z=y.websocket=function(a,d){var e=this,f=d+"/websocket";f="https"===f.slice(0,5)?"wss"+f.slice(5):"ws"+f.slice(4),e.ri=a,e.url=f;var g=b.WebSocket||b.MozWebSocket;e.ws=new g(e.url),e.ws.onmessage=function(a){e.ri._didMessage(a.data)},
// Firefox has an interesting bug. If a websocket connection is
// created after onunload, it stays alive even when user
// navigates away from the page. In such situation let's lie -
// let's not open the ws connection at all. See:
// https://github.com/sockjs/sockjs-client/issues/28
// https://bugzilla.mozilla.org/show_bug.cgi?id=696085
e.unload_ref=c.unload_add(function(){e.ws.close()}),e.ws.onclose=function(){e.ri._didMessage(c.closeFrame(1006,"WebSocket connection broken"))}};z.prototype.doSend=function(a){this.ws.send("["+a+"]")},z.prototype.doCleanup=function(){var a=this,b=a.ws;b&&(b.onmessage=b.onclose=null,b.close(),c.unload_del(a.unload_ref),a.unload_ref=a.ri=a.ws=null)},z.enabled=function(){return!(!b.WebSocket&&!b.MozWebSocket)},
// In theory, ws should require 1 round trip. But in chrome, this is
// not very stable over SSL. Most likely a ws connection requires a
// separate SSL connection, in which case 2 round trips are an
// absolute minumum.
z.roundTrips=2;
//         [*] End of lib/trans-websocket.js
//         [*] Including lib/trans-sender.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var A=function(){};A.prototype.send_constructor=function(a){var b=this;b.send_buffer=[],b.sender=a},A.prototype.doSend=function(a){var b=this;b.send_buffer.push(a),b.send_stop||b.send_schedule()},
// For polling transports in a situation when in the message callback,
// new message is being send. If the sending connection was started
// before receiving one, it is possible to saturate the network and
// timeout due to the lack of receiving socket. To avoid that we delay
// sending messages by some small time, in order to let receiving
// connection be started beforehand. This is only a halfmeasure and
// does not fix the big problem, but it does make the tests go more
// stable on slow networks.
A.prototype.send_schedule_wait=function(){var a,b=this;b.send_stop=function(){b.send_stop=null,clearTimeout(a)},a=c.delay(25,function(){b.send_stop=null,b.send_schedule()})},A.prototype.send_schedule=function(){var a=this;if(a.send_buffer.length>0){var b="["+a.send_buffer.join(",")+"]";a.send_stop=a.sender(a.trans_url,b,function(b,c){a.send_stop=null,b===!1?a.ri._didClose(1006,"Sending error "+c):a.send_schedule_wait()}),a.send_buffer=[]}},A.prototype.send_destructor=function(){var a=this;a._send_stop&&a._send_stop(),a._send_stop=null};var B=function(b,d,e){var f=this;if(!("_send_form"in f)){var g=f._send_form=a.createElement("form"),h=f._send_area=a.createElement("textarea");h.name="d",g.style.display="none",g.style.position="absolute",g.method="POST",g.enctype="application/x-www-form-urlencoded",g.acceptCharset="UTF-8",g.appendChild(h),a.body.appendChild(g)}var g=f._send_form,h=f._send_area,i="a"+c.random_string(8);g.target=i,g.action=b+"/jsonp_send?i="+i;var j;try{
// ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
j=a.createElement('<iframe name="'+i+'">')}catch(k){j=a.createElement("iframe"),j.name=i}j.id=i,g.appendChild(j),j.style.display="none";try{h.value=d}catch(l){c.log("Your browser is seriously broken. Go home! "+l.message)}g.submit();var m=function(a){j.onerror&&(j.onreadystatechange=j.onerror=j.onload=null,
// Opera mini doesn't like if we GC iframe
// immediately, thus this timeout.
c.delay(500,function(){j.parentNode.removeChild(j),j=null}),h.value="",
// It is not possible to detect if the iframe succeeded or
// failed to submit our form.
e(!0))};return j.onerror=j.onload=m,j.onreadystatechange=function(a){"complete"==j.readyState&&m()},m},C=function(a){return function(b,c,d){var e=new a("POST",b+"/xhr_send",c);return e.onfinish=function(a,b){d(200===a||204===a,"http status "+a)},function(a){d(!1,a)}}},D=function(b,d){var e,f,g=a.createElement("script"),h=function(a){f&&(f.parentNode.removeChild(f),f=null),g&&(clearTimeout(e),
// Unfortunately, you can't really abort script loading of
// the script.
g.parentNode.removeChild(g),g.onreadystatechange=g.onerror=g.onload=g.onclick=null,g=null,d(a),d=null)},i=!1,j=null;
// IE: event/htmlFor/onclick trick.
// One can't rely on proper order for onreadystatechange. In order to
// make sure, set a 'htmlFor' and 'event' properties, so that
// script code will be installed as 'onclick' handler for the
// script object. Later, onreadystatechange, manually execute this
// code. FF and Chrome doesn't work with 'event' and 'htmlFor'
// set. For reference see:
//   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
// Also, read on that about script ordering:
//   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order
if(g.id="a"+c.random_string(8),g.src=b,g.type="text/javascript",g.charset="UTF-8",g.onerror=function(a){j||(
// Delay firing close_script.
j=setTimeout(function(){i||h(c.closeFrame(1006,"JSONP script loaded abnormally (onerror)"))},1e3))},g.onload=function(a){h(c.closeFrame(1006,"JSONP script loaded abnormally (onload)"))},g.onreadystatechange=function(a){if(/loaded|closed/.test(g.readyState)){if(g&&g.htmlFor&&g.onclick){i=!0;try{
// In IE, actually execute the script.
g.onclick()}catch(b){}}g&&h(c.closeFrame(1006,"JSONP script loaded abnormally (onreadystatechange)"))}},"undefined"==typeof g.async&&a.attachEvent)
// According to mozilla docs, in recent browsers script.async defaults
// to 'true', so we may use it to detect a good browser:
// https://developer.mozilla.org/en/HTML/Element/script
if(/opera/i.test(navigator.userAgent))f=a.createElement("script"),f.text="try{var a = document.getElementById('"+g.id+"'); if(a)a.onerror();}catch(x){};",g.async=f.async=!1;else{
// Naively assume we're in IE
try{g.htmlFor=g.id,g.event="onclick"}catch(k){}g.async=!0}"undefined"!=typeof g.async&&(g.async=!0),
// Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.
e=setTimeout(function(){h(c.closeFrame(1006,"JSONP script loaded abnormally (timeout)"))},35e3);var l=a.getElementsByTagName("head")[0];return l.insertBefore(g,l.firstChild),f&&l.insertBefore(f,l.firstChild),h},E=y["jsonp-polling"]=function(a,b){c.polluteGlobalNamespace();var d=this;d.ri=a,d.trans_url=b,d.send_constructor(B),d._schedule_recv()};
// Inheritnace
E.prototype=new A,E.prototype._schedule_recv=function(){var a=this,b=function(b){a._recv_stop=null,b&&(
// no data - heartbeat;
a._is_closing||a.ri._didMessage(b)),
// The message can be a close message, and change is_closing state.
a._is_closing||a._schedule_recv()};a._recv_stop=F(a.trans_url+"/jsonp",D,b)},E.enabled=function(){return!0},E.need_body=!0,E.prototype.doCleanup=function(){var a=this;a._is_closing=!0,a._recv_stop&&a._recv_stop(),a.ri=a._recv_stop=null,a.send_destructor()};
// Abstract away code that handles global namespace pollution.
var F=function(a,d,e){var f="a"+c.random_string(6),g=a+"?c="+escape(h+"."+f),i=0,j=function(a){switch(i){case 0:
// Normal behaviour - delete hook _and_ emit message.
delete b[h][f],e(a);break;case 1:
// Fake close frame - emit but don't delete hook.
e(a),i=2;break;case 2:
// Got frame after connection was closed, delete hook, don't emit.
delete b[h][f]}},k=d(g,j);b[h][f]=k;var l=function(){b[h][f]&&(i=1,b[h][f](c.closeFrame(1e3,"JSONP user aborted read")))};return l},G=function(){};G.prototype=new A,G.prototype.run=function(a,b,c,d,e){var f=this;f.ri=a,f.trans_url=b,f.send_constructor(C(e)),f.poll=new $(a,d,b+c,e)},G.prototype.doCleanup=function(){var a=this;a.poll&&(a.poll.abort(),a.poll=null)};
// xhr-streaming
var H=y["xhr-streaming"]=function(a,b){this.run(a,b,"/xhr_streaming",da,c.XHRCorsObject)};H.prototype=new G,H.enabled=function(){
// Support for CORS Ajax aka Ajax2? Opera 12 claims CORS but
// doesn't do streaming.
return b.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest&&!/opera/i.test(navigator.userAgent)},H.roundTrips=2,// preflight, ajax
// Safari gets confused when a streaming ajax request is started
// before onload. This causes the load indicator to spin indefinetely.
H.need_body=!0;
// According to:
//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/
// xdr-streaming
var I=y["xdr-streaming"]=function(a,b){this.run(a,b,"/xhr_streaming",da,c.XDRObject)};I.prototype=new G,I.enabled=function(){return!!b.XDomainRequest},I.roundTrips=2;// preflight, ajax
// xhr-polling
var J=y["xhr-polling"]=function(a,b){this.run(a,b,"/xhr",da,c.XHRCorsObject)};J.prototype=new G,J.enabled=H.enabled,J.roundTrips=2;// preflight, ajax
// xdr-polling
var K=y["xdr-polling"]=function(a,b){this.run(a,b,"/xhr",da,c.XDRObject)};K.prototype=new G,K.enabled=I.enabled,K.roundTrips=2;// preflight, ajax
//         [*] End of lib/trans-xhr.js
//         [*] Including lib/trans-iframe.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
// Few cool transports do work only for same-origin. In order to make
// them working cross-domain we shall use iframe, served form the
// remote domain. New browsers, have capabilities to communicate with
// cross domain iframe, using postMessage(). In IE it was implemented
// from IE 8+, but of course, IE got some details wrong:
//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
//    http://stevesouders.com/misc/test-postmessage.php
var L=function(){};L.prototype.i_constructor=function(a,b,d){var e=this;e.ri=a,e.origin=c.getOrigin(d),e.base_url=d,e.trans_url=b;var f=d+"/iframe.html";e.ri._options.devel&&(f+="?t="+ +new Date),e.window_id=c.random_string(8),f+="#"+e.window_id,e.iframeObj=c.createIframe(f,function(a){e.ri._didClose(1006,"Unable to load an iframe ("+a+")")}),e.onmessage_cb=c.bind(e.onmessage,e),c.attachMessage(e.onmessage_cb)},L.prototype.doCleanup=function(){var a=this;if(a.iframeObj){c.detachMessage(a.onmessage_cb);try{
// When the iframe is not loaded, IE raises an exception
// on 'contentWindow'.
a.iframeObj.iframe.contentWindow&&a.postMessage("c")}catch(b){}a.iframeObj.cleanup(),a.iframeObj=null,a.onmessage_cb=a.iframeObj=null}},L.prototype.onmessage=function(a){var b=this;if(a.origin===b.origin){var c=a.data.slice(0,8),d=a.data.slice(8,9),e=a.data.slice(9);if(c===b.window_id)switch(d){case"s":b.iframeObj.loaded(),b.postMessage("s",JSON.stringify([y.version,b.protocol,b.trans_url,b.base_url]));break;case"t":b.ri._didMessage(e)}}},L.prototype.postMessage=function(a,b){var c=this;c.iframeObj.post(c.window_id+a+(b||""),c.origin)},L.prototype.doSend=function(a){this.postMessage("m",a)},L.enabled=function(){
// postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
// huge delay, or not at all.
var a=navigator&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Konqueror");return("function"==typeof b.postMessage||"object"==typeof b.postMessage)&&!a};
//         [*] End of lib/trans-iframe.js
//         [*] Including lib/trans-iframe-within.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var M,N=function(a,d){parent!==b?parent.postMessage(M+a+(d||""),"*"):c.log("Can't postMessage, no parent window.",a,d)},O=function(){};O.prototype._didClose=function(a,b){N("t",c.closeFrame(a,b))},O.prototype._didMessage=function(a){N("t",a)},O.prototype._doSend=function(a){this._transport.doSend(a)},O.prototype._doCleanup=function(){this._transport.doCleanup()},c.parent_origin=void 0,y.bootstrap_iframe=function(){var d;M=a.location.hash.slice(1);var e=function(a){if(a.source===parent&&("undefined"==typeof c.parent_origin&&(c.parent_origin=a.origin),a.origin===c.parent_origin)){var e=a.data.slice(0,8),f=a.data.slice(8,9),g=a.data.slice(9);if(e===M)switch(f){case"s":var h=JSON.parse(g),i=h[0],j=h[1],k=h[2],l=h[3];if(i!==y.version&&c.log('Incompatibile SockJS! Main site uses: "'+i+'", the iframe: "'+y.version+'".'),!c.flatUrl(k)||!c.flatUrl(l))return void c.log("Only basic urls are supported in SockJS");if(!c.isSameOriginUrl(k)||!c.isSameOriginUrl(l))return void c.log("Can't connect to different domain from within an iframe. ("+JSON.stringify([b.location.href,k,l])+")");d=new O,d._transport=new O[j](d,k,l);break;case"m":d._doSend(g);break;case"c":d&&d._doCleanup(),d=null}}};
// alert('test ticker');
// facade = new FacadeJS();
// facade._transport = new FacadeJS['w-iframe-xhr-polling'](facade, 'http://host.com:9999/ticker/12/basd');
c.attachMessage(e),
// Start
N("s")};
//         [*] End of lib/trans-iframe-within.js
//         [*] Including lib/info.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var P=function(a,b){var d=this;c.delay(function(){d.doXhr(a,b)})};P.prototype=new f(["finish"]),P.prototype.doXhr=function(a,b){var d=this,e=(new Date).getTime(),f=new b("GET",a+"/info"),g=c.delay(8e3,function(){f.ontimeout()});f.onfinish=function(a,b){if(clearTimeout(g),g=null,200===a){var c=(new Date).getTime()-e,f=JSON.parse(b);"object"!=typeof f&&(f={}),d.emit("finish",f,c)}else d.emit("finish")},f.ontimeout=function(){f.close(),d.emit("finish")}};var Q=function(b){var d=this,e=function(){var a=new L;a.protocol="w-iframe-info-receiver";var c=function(b){if("string"==typeof b&&"m"===b.substr(0,1)){var c=JSON.parse(b.substr(1)),e=c[0],f=c[1];d.emit("finish",e,f)}else d.emit("finish");a.doCleanup(),a=null},e={_options:{},_didClose:c,_didMessage:c};a.i_constructor(e,b,b)};a.body?e():c.attachEvent("load",e)};Q.prototype=new f(["finish"]);var R=function(){
// It may not be possible to do cross domain AJAX to get the info
// data, for example for IE7. But we want to run JSONP, so let's
// fake the response, with rtt=2s (rto=6s).
var a=this;c.delay(function(){a.emit("finish",{},2e3)})};R.prototype=new f(["finish"]);var S=function(a){if(c.isSameOriginUrl(a))
// If, for some reason, we have SockJS locally - there's no
// need to start up the complex machinery. Just use ajax.
return new P(a,c.XHRLocalObject);switch(c.isXHRCorsCapable()){case 1:
// XHRLocalObject -> no_credentials=true
return new P(a,c.XHRLocalObject);case 2:return new P(a,c.XDRObject);case 3:
// Opera
return new Q(a);default:
// IE 7
return new R}},T=O["w-iframe-info-receiver"]=function(a,b,d){var e=new P(d,c.XHRLocalObject);e.onfinish=function(b,c){a._didMessage("m"+JSON.stringify([b,c])),a._didClose()}};T.prototype.doCleanup=function(){};
//         [*] End of lib/info.js
//         [*] Including lib/trans-iframe-eventsource.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var U=y["iframe-eventsource"]=function(){var a=this;a.protocol="w-iframe-eventsource",a.i_constructor.apply(a,arguments)};U.prototype=new L,U.enabled=function(){return"EventSource"in b&&L.enabled()},U.need_body=!0,U.roundTrips=3;// html, javascript, eventsource
// w-iframe-eventsource
var V=O["w-iframe-eventsource"]=function(a,b){this.run(a,b,"/eventsource",_,c.XHRLocalObject)};V.prototype=new G;
//         [*] End of lib/trans-iframe-eventsource.js
//         [*] Including lib/trans-iframe-xhr-polling.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var W=y["iframe-xhr-polling"]=function(){var a=this;a.protocol="w-iframe-xhr-polling",a.i_constructor.apply(a,arguments)};W.prototype=new L,W.enabled=function(){return b.XMLHttpRequest&&L.enabled()},W.need_body=!0,W.roundTrips=3;// html, javascript, xhr
// w-iframe-xhr-polling
var X=O["w-iframe-xhr-polling"]=function(a,b){this.run(a,b,"/xhr",da,c.XHRLocalObject)};X.prototype=new G;
//         [*] End of lib/trans-iframe-xhr-polling.js
//         [*] Including lib/trans-iframe-htmlfile.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
// This transport generally works in any browser, but will cause a
// spinning cursor to appear in any browser other than IE.
// We may test this transport in all browsers - why not, but in
// production it should be only run in IE.
var Y=y["iframe-htmlfile"]=function(){var a=this;a.protocol="w-iframe-htmlfile",a.i_constructor.apply(a,arguments)};
// Inheritance.
Y.prototype=new L,Y.enabled=function(){return L.enabled()},Y.need_body=!0,Y.roundTrips=3;// html, javascript, htmlfile
// w-iframe-htmlfile
var Z=O["w-iframe-htmlfile"]=function(a,b){this.run(a,b,"/htmlfile",ca,c.XHRLocalObject)};Z.prototype=new G;
//         [*] End of lib/trans-iframe-htmlfile.js
//         [*] Including lib/trans-polling.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var $=function(a,b,c,d){var e=this;e.ri=a,e.Receiver=b,e.recv_url=c,e.AjaxObject=d,e._scheduleRecv()};$.prototype._scheduleRecv=function(){var a=this,b=a.poll=new a.Receiver(a.recv_url,a.AjaxObject),c=0;b.onmessage=function(b){c+=1,a.ri._didMessage(b.data)},b.onclose=function(c){a.poll=b=b.onmessage=b.onclose=null,a.poll_is_closing||("permanent"===c.reason?a.ri._didClose(1006,"Polling error ("+c.reason+")"):a._scheduleRecv())}},$.prototype.abort=function(){var a=this;a.poll_is_closing=!0,a.poll&&a.poll.abort()};
//         [*] End of lib/trans-polling.js
//         [*] Including lib/trans-receiver-eventsource.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var _=function(a){var b=this,d=new EventSource(a);d.onmessage=function(a){b.dispatchEvent(new e("message",{data:unescape(a.data)}))},b.es_close=d.onerror=function(a,f){
// ES on reconnection has readyState = 0 or 1.
// on network error it's CLOSED = 2
var g=f?"user":2!==d.readyState?"network":"permanent";b.es_close=d.onmessage=d.onerror=null,
// EventSource reconnects automatically.
d.close(),d=null,c.delay(200,function(){b.dispatchEvent(new e("close",{reason:g}))})}};_.prototype=new d,_.prototype.abort=function(){var a=this;a.es_close&&a.es_close({},!0)};
//         [*] End of lib/trans-receiver-eventsource.js
//         [*] Including lib/trans-receiver-htmlfile.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var aa,ba=function(){if(void 0===aa)if("ActiveXObject"in b)try{aa=!!new ActiveXObject("htmlfile")}catch(a){}else aa=!1;return aa},ca=function(a){var d=this;c.polluteGlobalNamespace(),d.id="a"+c.random_string(6,26),a+=(-1===a.indexOf("?")?"?":"&")+"c="+escape(h+"."+d.id);var f,g=ba()?c.createHtmlfile:c.createIframe;b[h][d.id]={start:function(){f.loaded()},message:function(a){d.dispatchEvent(new e("message",{data:a}))},stop:function(){d.iframe_close({},"network")}},d.iframe_close=function(a,c){f.cleanup(),d.iframe_close=f=null,delete b[h][d.id],d.dispatchEvent(new e("close",{reason:c}))},f=g(a,function(a){d.iframe_close({},"permanent")})};ca.prototype=new d,ca.prototype.abort=function(){var a=this;a.iframe_close&&a.iframe_close({},"user")};
//         [*] End of lib/trans-receiver-htmlfile.js
//         [*] Including lib/trans-receiver-xhr.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
var da=function(a,b){var c=this,d=0;c.xo=new b("POST",a,null),c.xo.onchunk=function(a,b){if(200===a)for(;;){var f=b.slice(d),g=f.indexOf("\n");if(-1===g)break;d+=g+1;var h=f.slice(0,g);c.dispatchEvent(new e("message",{data:h}))}},c.xo.onfinish=function(a,b){c.xo.onchunk(a,b),c.xo=null;var d=200===a?"network":"permanent";c.dispatchEvent(new e("close",{reason:d}))}};
//         [*] End of lib/test-hooks.js
//         [*] End of lib/trans-receiver-xhr.js
//         [*] Including lib/test-hooks.js
/*
     * ***** BEGIN LICENSE BLOCK *****
     * Copyright (c) 2011-2012 VMware, Inc.
     *
     * For the license see COPYING.
     * ***** END LICENSE BLOCK *****
     */
// For testing
return da.prototype=new d,da.prototype.abort=function(){var a=this;a.xo&&(a.xo.close(),a.dispatchEvent(new e("close",{reason:"user"})),a.xo=null)},y.getUtils=function(){return c},y.getIframeTransport=function(){return L},y}(),"_sockjs_onload"in window&&setTimeout(_sockjs_onload,1),SockJS},instances={},SocketConnection=function(a){
//Only one instance per socket server
/**
     * Holds all registered channels
     * @type {Object} __channels
     */
/**
     * Holds the SockJS instance
     * @private
     * @type {Object} SockJS instance
     */
/**
     * Reconnect if connection gets lost
     * @property {Boolean} autoReconnect
     */
/**
     * Defines a reconnection interval
     * @type {Number}
     */
return instances[a]?instances[a]:(instances[a]=this,this.__isReady=!1,this.__onReadyCallbacks=[],this.__channels={},this.conn=null,this.connect(a),this.autoReconnect=!0,void(this.reconnectionInterval=1500))};/**
 * Connects to a socket server
 * @param  {String} url Socket server url
 */
SocketConnection.prototype.connect=function(a){var b=this;this.conn&&"disconnected"!==this.connectionState||(log.info("Connect to socket server ",a),this.conn=new SockJS(a,null,{debug:log.logLevel>=4}),this.connectionState="connecting",this.conn.onopen=function(){log.info("Connection was successful!"),b.setReady(),b.connectionState="connected"},this.conn.onmessage=function(a){var c;try{c=JSON.parse(a.data)}catch(d){console.error("Could not parse socket message!",a.data)}if(!c.channel)throw new Error("No socket channel was sent!");log.info("Got socket message",c.eventName,"in channel "+c.channel,c.args);var e=c.args||[];e.unshift(c.eventName),b.__channels[c.channel]?b.__channels[c.channel].emit.apply(b.__channels[c.channel],e):log.info(" ... channel not found!",c.channel)},this.conn.onclose=function(c){b.connectionState="disconnected",b.unsetReady(),log.warn("Connection to "+a+" closed!",c),b.autoReconnect&&(log.info("Try to reconnect to "+a),setTimeout(function(){b.connect(a)},b.reconnectionInterval))})},/**
 * Register a channel
 * @param  {String} channel  Channel name
 * @param  {Object} listener Socket object
 */
SocketConnection.prototype.registerChannel=function(a,b){log.info("Register new channel",a),this.__channels[a]?log.info(" ... channel already registered!"):this.__channels[a]=b},/**
 * Unregister a channel
 * @param  {String} channel  Channel name
 * @param  {Object} listener Socket object
 */
SocketConnection.prototype.unregisterChannel=function(a){log.info("Unregister channel",a),this.__channels[a]?delete this.__channels[a]:log.info(" ... channel not found!")},/**
 * Sends a socket message to a connected socket server
 *
 * @method send
 * @param {String} channel   Channel name
 * @param {String} eventName Event name
 * @param {Object} data      Data
 * 
 */
SocketConnection.prototype.send=function(a,b,c){var d=this,e=Array.prototype.slice.call(arguments,2);this.ready(function(){log.info("Send socket message to channel "+a,b,e),d.conn.send(JSON.stringify({channel:a,eventName:b,args:e}))})},/**
 * Call function fn when socket is connected
 *
 * @method ready
 * @param  {Function} fn Function to be called if socket is ready
 */
SocketConnection.prototype.ready=function(a){this.__isReady?a.call(this):this.__onReadyCallbacks.push(a)},/**
 * Sets readyState and calls all queued functions
 *
 * @method setReady
 * @private
 */
SocketConnection.prototype.setReady=function(){var a=this;this.__isReady=!0,this.__onReadyCallbacks.forEach(function(b){b.call(a)}),this.__onReadyCallbacks=[]},SocketConnection.prototype.unsetReady=function(){this.__isReady=!1},
//--
module.exports=SocketConnection;var XQCore=require("./xqcore-core"),log=new XQCore.Logger("Socket");log.logLevel=5;/**
 * Socket connection module
 * @param {String} url     Socket server uri
 * @param {String} channel Socket channel
 *
 * 
 * @example {js}
 * var socket = new XQCore.Socket('http://mysocket.io:9889', 'mychannel');
 * socket.on('data', function() {
 *   console.log('Got data from server');
 * });
 */
var Socket=function(a,b){this.__isReady=!1,this.__onReadyCallbacks=[],this.channel=b,this.socket=new XQCore.SocketConnection(a),this.socket.registerChannel(b,this)};XQCore.extend(Socket.prototype,new XQCore.Event),/**
 * Sends a socket message to a connected socket server
 *
 * @method send
 * @param {String} eventName Event name
 * @param {Object} data      Event data, multiple args are allowed
 */
Socket.prototype.send=function(a,b){var c=Array.prototype.slice.call(arguments);c.unshift(this.channel),this.socket.send.apply(this.socket,c)},module.exports=Socket;var XQCore=require("./xqcore-core"),SyncModel=function(a,b){/**
     * @property {Boolean} noAutoRegister Disables auto registration. SyncList.register() must be called manually to register the list at the socket server.
     */
this.noAutoRegister=!1,
//Call XQCore.Model constructor
XQCore.Model.call(this,a,b),this.server=this.server||location.protocol+"//"+location.hostname,this.port=this.port||XQCore.socketPort,this.path=this.path||"xqsocket",this.channel=this.channel||this.name.toLowerCase(),this.syncEnabled=!1,this.connectToSocket(),this.noAutoRegister||this.register()};SyncModel.prototype=Object.create(XQCore.Model.prototype),SyncModel.prototype.constructor=SyncModel,/**
 * Inherits a sync model prototype
 * @method inherit
 * @param  {String} name    model name
 * @param  {Object} options SyncModel properties
 * @return {Object}         Returns a XQCore.SyncModel prototype
 */
SyncModel.inherit=function(a,b){"object"==typeof a&&(b=a,a=void 0);var c=function(){XQCore.SyncModel.call(this,a,b)};return c.prototype=Object.create(XQCore.SyncModel.prototype),c.prototype.constructor=c,c},/**
 * Connect to a socket server
 *
 * @method connectToSocket
 */
SyncModel.prototype.connectToSocket=function(){var a=this.server+":"+this.port+"/"+this.path;this.socket||(this.debug("Connect to socket:",a),this.socket=new XQCore.Socket(a,this.channel))},SyncModel.prototype.register=function(a){var b=this;this.syncEnabled=!!a,b.debug("Register syncmodel at server:",b.name);var c={noSync:!0};b.socket.on("syncmodel.set",function(a){b.set(a,c)}),b.socket.on("syncmodel.replace",function(a){c.replace=!0,b.set(a,c)}),b.socket.on("syncmodel.item",function(a,d){b.set(a,d,c)}),b.socket.on("syncmodel.insert",function(a,d,e){b.insert(a,d,e,c)}),b.socket.on("syncmodel.remove",function(a,d,e){b.remove(a,d,e,c)}),b.socket.on("syncmodel.reset",function(){b.reset(c)}),b.socket.on("syncmodel.init",function(a){console.log("Got initial data request:",a),b.set(a,c)}),b.socket.send("syncmodel.register",{name:b.name})},SyncModel.prototype.unregister=function(){var a=this.conf.syncWith||this.name.replace(/Model$/,"");this.socket.send("syncmodel.unregister",{name:a}),this.socket.off("syncmodel.set"),this.socket.off("syncmodel.replace"),this.socket.off("syncmodel.item"),this.socket.off("syncmodel.insert"),this.socket.off("syncmodel.remove"),this.socket.off("syncmodel.reset"),this.socket.off("syncmodel.init")},/**
 * Send a socket message to the server
 * @param  {String} eventName Event name
 * @param  {Object} data      Data object
 */
SyncModel.prototype.emitRemote=function(a,b){this.socket.send(a,b)},SyncModel.prototype.sync=function(a){if(this.syncEnabled){var b=Array.prototype.slice.call(arguments,1);b.unshift("syncmodel."+a),this.emitRemote.apply(this,b)}},SyncModel.prototype.fetchModel=function(){this.emitRemote("syncmodel.fetch")},module.exports=SyncModel;var XQCore=require("./xqcore-core"),List=function(a,b){
//Call XQCore.ReadyState constructor
XQCore.ReadyState.call(this),
//Call Event constructor
XQCore.Event.call(this);var c=this;"object"==typeof arguments[0]&&(b=a,a=b.name),/**
     * Enable debug mode
     * @public
     * @type {Boolean}
     */
this.debug=XQCore.debug,void 0===b&&(b={}),this.__unfiltered={},/**
     * List name
     * @property {String} name
     */
this.name=(a?a.replace(/List$/,""):"Nameless")+"List",/**
     * Contains list items
     * @property {Array} items
     */
this.items=[],/**
     * Sets a maxlength of items
     * @property {Number} maxlength
     * @default null
     */
this.maxLength=null,/**
     * Sets the Model to be used to create new models in push and unshift methods.
     * @property {Object} model
     */
this.model||(this.model=XQCore.Model),/*!
     * Mapping of initial conf
     */
"function"==typeof b?b.call(this,c):XQCore.extend(this,b),/**
     * Sets default values
     * @property {Object|Array} defaults
     */
this.defaults&&!XQCore.isEmpty(this.defaults)&&this.push(this.defaults,{silent:!0,noValidation:!0}),/*!
     * Sets ready state
     */
this.state("ready"),this.setReady()};
//Extend with ready state
XQCore.extend(List.prototype,XQCore.ReadyState.prototype),XQCore.extend(List.prototype,XQCore.Event.prototype),XQCore.extend(List.prototype,new XQCore.Logger),XQCore.Sync&&XQCore.extend(List.prototype,XQCore.Sync.prototype),/**
 * Inherits a list prototype
 * @method inherit
 * @param  {String} name    list name
 * @param  {Object} options Model properties
 * @return {Object}         Returns a XQCore.Model prototype
 */
List.inherit=function(a,b){"object"==typeof a&&(b=a,a=void 0);var c=function(){XQCore.List.call(this,a,b)};return c.prototype=Object.create(XQCore.List.prototype),c.prototype.constructor=c,c},/**
 * Contains the length of the list
 * @property length
 * @type {Number}
 */
Object.defineProperty(List.prototype,"length",{get:function(){return this.items.length}}),/**
 * Change the list state
 *
 * @method state
 * @param {String} state New state
 */
List.prototype.state=function(a){this.__state=a,this.emit("state."+a),this.emit("state.change",a)},/**
 * Get the current list state
 *
 * @method getState
 */
List.prototype.getState=function(){return this.__state},/**
 * Adds one ore more items to the end of a list.
 * You can pass a XQCore.Model or a plain data object.
 * A data object will be converted into a XQCore.Model.
 * The model must be valid to be added to the list.
 * 
 * @param {Object|Array} data Model instance or a plain data object. Add multiple models by using an array of items
 * @param {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 *
 * @returns {Boolean} Returns true if validation was succesfully and all items were added
 */
List.prototype.push=function(a,b){var c,d,e=[];b=b||{},Array.isArray(a)||(a=[a]);for(var f=0,g=a.length;g>f;f++){if(d=a[f],d instanceof XQCore.Model?c=d:(c=new this.model("ListItem"),c.set(d,{noSync:!0,silent:!0})),!c.isValid())return!1;e.push(c)}
//No validation error has been ocured.
var h=this.items.push.apply(this.items,e);return h&&(this.maxLength&&this.items.length>this.maxLength&&this.items.splice(0,this.items.length-this.maxLength),b.silent||this.emit("item.push",e,h),b.noSync||"function"==typeof this.sync&&this.sync("push",e)),!0},/**
 * Adds one ore more items to the beginning of a list.
 * You can pass a XQCore.Model or a plain data object.
 * A data object will be converted into a XQCore.Model.
 * The model must be valid to be added to the list.
 * 
 * @param {Object|Array} data Model instance or a plain data object. Add multiple models by using an array of items
 * @param {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 * @returns {Boolean} Returns true if validation was succesfully and all items were added
 */
List.prototype.unshift=function(a,b){var c,d,e=[];b=b||{},Array.isArray(a)||(a=[a]);for(var f=0,g=a.length;g>f;f++){if(d=a[f],d instanceof XQCore.Model?c=d:(c=new this.model("ListItem"),c.set(d,{noSync:!0,silent:!0})),!c.isValid())return!1;e.unshift(c)}
//No validation error has been ocured.
var h=this.items.unshift.apply(this.items,e);return h&&(this.maxLength&&this.items.length>this.maxLength&&this.items.splice(this.maxLength),b.silent||this.emit("item.unshift",e,h),b.noSync||"function"==typeof this.sync&&this.sync("unshift",e)),!0},/**
 * Removes the last item from a list and returns it.
 *
 * @event item.remove Emits an item.remove event. The removed item will be passed as the first argument
 * 
 * @param {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 *
 * @returns {Object} Returns the removed item
 */
List.prototype.pop=function(a){var b;return a=a||{},b=this.items.pop()||null,void 0===b?null:(a.silent||this.emit("item.pop",b),a.noSync||"function"==typeof this.sync&&this.sync("pop",b),b)},/**
 * Removes the first item from a list and returns it.
 *
 * @event item.shift Emits an item.shift event. The removed item will be passed as the first argument
 * 
 * @param {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 *
 * @returns {Object} Returns the removed item
 */
List.prototype.shift=function(a){var b;return a=a||{},b=this.items.shift()||null,void 0===b?null:(a.silent||this.emit("item.shift",b),a.noSync||"function"==typeof this.sync&&this.sync("shift",b),b)},/**
 * Updates a list item or pushs it to the end
 * You can pass a XQCore.Model or a plain data object.
 * A data object will be converted into a XQCore.Model.
 * The model must be valid to be added to the list.
 *
 * @param {Object|Number} match Match to find element which should be updated
 * @param {Object} data Model instance or a plain data object.
 * @param {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 *
 * @fires item.update
 * Fires an item.update event if item was succesfully updated. Othwewise fires an item.push event
 *
 * @returns {Object} Returns the updated item
 */
List.prototype.update=function(a,b,c){c=c||{};var d;return d="number"==typeof a?this.items[a]:this.findOne(a),d&&(d.set(b,{noSync:!0,silent:!0}),c.silent||this.emit("item.update",d),c.noSync||"function"==typeof this.sync&&this.sync("update",a,b)),d},/**
 * Removes an item at a given position
 *
 * @param {Object|Number} match Match to find element which should be removed
 * @param {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 *
 * @fires item.remove
 * Fires an item.remove event if item was succesfully removed.
 *
 * @returns {Object} Returns the removed item
 */
List.prototype.remove=function(a,b){b=b||{};var c,d=0;if("number"==typeof a)c=this.items[a],d=a;else{c=this.findOne(a);for(var e=0,f=this.items.length;f>e;e++)if(this.items[e]===c){d=e;break}}return c&&(this.items.splice(d,1),b.silent||this.emit("item.remove",c,d),b.noSync||"function"==typeof this.sync&&this.sync("remove",a,d)),c},/**
 * Clears the whole list
 * @param  {Object} options Options object
 * {
 *     silent: true,    //Disable event emitting
 *     noSync: true     //Don't call sync method
 * }
 *
 * @fires item.clear
 * Fires an item.clear event if item was succesfully cleared. It will not fire any events on an empty list
 *
 * @returns {Number} Returns the amount of removed items
 */
List.prototype.clear=function(a){if(a=a||{},0===this.items.length)return 0;var b=this.toArray();return this.items=[],a.silent||this.emit("item.clear",b),a.noSync||"function"==typeof this.sync&&this.sync("clear",b),b.length},/**
 * Returns list items as an array
 * @method toArray
 * @return {Array} Returns an array of list items
 */
List.prototype.toArray=function(){return this.items.map(function(a){return a.properties})},/**
 * Compatibility, does the same as toArray()
 * @method toJSON   
 * @return {Array} Returns an array of list items
 */
List.prototype.toJSON=function(){return this.toArray()},/**
 * Search through list items and returns the first matching item
 *
 * @method findOne
 * @param {Object} searchfor Searching for object
 * @return {Object} Returns the first matched item or null. The returning item is a XQCore.Model object
 */
List.prototype.findOne=function(a){var b;if(b=this.items)for(var c=0;c<b.length;c++){var d,e=b[c];for(var f in a)if(a.hasOwnProperty(f)){if(e.properties[f]&&e.properties[f]===a[f]){d=!0;break}d=!1}if(d===!0)return e}return null},/**
 * Search through list items and returns all matching items
 *
 * @method find
 * @param {Object} searchfor Searching for object
 * @return {Object} Returns all matched item or an empty array.
 * The returning value is an array of XQCore.Model objects
 */
List.prototype.find=function(a){var b,c=[];if(b=this.items)for(var d=0;d<b.length;d++){var e,f=b[d];for(var g in a)if(a.hasOwnProperty(g)){if(f.properties[g]&&f.properties[g]===a[g]){e=!0;break}e=!1}e===!0&&c.push(f)}return c},/**
 * Calls a function on each item.
 * Optionally traverse the `initial` object through all methods and returns it at the end.
 *
 * @method each
 * @param  {Object}   initial Object which will be traversed and returned at the end
 * @param  {Function} fn      Funtion to be called on each item. Gets the model as first arg and the traversing object as second arg.
 * @returns {Object}          Returns a traversed object
 */
List.prototype.each=function(a,b){"function"==typeof a&&(b=a,a={});for(var c=a,d=0,e=this.items.length;e>d;d++)c=b(this.items[d],c);return c},
//--
module.exports=List;var XQCore=require("./xqcore-core"),SyncList=function(a,b){/**
     * @property {Boolean} noAutoRegister Disables auto registration. SyncList.register() must be called manually to register the list at the socket server.
     */
this.noAutoRegister=!1,
//Call XQCore.List constructor
XQCore.List.call(this,a,b),this.server=this.server||location.protocol+"//"+location.hostname,this.port=this.port||XQCore.socketPort,this.path=this.path||"xqsocket",this.channel=this.channel||this.name.toLowerCase(),this.syncEnabled=!1,this.connectToSocket(),this.noAutoRegister||this.register()};SyncList.prototype=Object.create(XQCore.List.prototype),SyncList.prototype.constructor=SyncList,/**
 * Inherits a sync model prototype
 * @method inherit
 * @param  {String} name    model name
 * @param  {Object} options SyncList properties
 * @return {Object}         Returns a XQCore.SyncList prototype
 */
SyncList.inherit=function(a,b){"object"==typeof a&&(b=a,a=void 0);var c=function(){XQCore.SyncList.call(this,a,b)};return c.prototype=Object.create(XQCore.SyncList.prototype),c.prototype.constructor=c,c},/**
 * Connect to a socket server
 *
 * @method connectToSocket
 */
SyncList.prototype.connectToSocket=function(){var a=this.server+":"+this.port+"/"+this.path;this.socket||(this.debug("Connect to socket:",a),this.socket=new XQCore.Socket(a,this.channel))},/**
 * Register a sync list at the socket server. This action is called automatically except the noAutoRegister option is set.
 * @param  {Boolean} enableSync Enables/Disables the initial sync. Defaults to false
 */
SyncList.prototype.register=function(a){var b=this;"boolean"==typeof a&&(this.syncEnabled=a),b.debug("Register synclist at server:",b.name);var c={noSync:!0};b.socket.on("synclist.push",function(a){b.push(a,c)}),b.socket.on("synclist.unshift",function(a){b.push(a,c)}),b.socket.on("synclist.pop",function(){b.push(c)}),b.socket.on("synclist.shift",function(){b.push(c)}),b.socket.on("synclist.update",function(a,d){b.update(a,d,c)}),b.socket.on("synclist.clear",function(){b.clear(c)}),b.socket.on("synclist.init",function(a){console.log("Got initial data request:",a),b.push(a,c)}),b.socket.send("synclist.register",{name:b.name})},SyncList.prototype.unregister=function(){this.debug("Unregister synclist at server:",this.name),this.socket.send("synclist.unregister",{name:this.name}),this.socket.off("synclist.push"),this.socket.off("synclist.unshift"),this.socket.off("synclist.pop"),this.socket.off("synclist.shift"),this.socket.off("synclist.update"),this.socket.off("synclist.clear"),this.socket.off("synclist.init")},/**
 * Send a socket message to the server
 * @param  {String} eventName Event name
 * @param  {Object} data      Data object
 */
SyncList.prototype.emitRemote=function(a,b){this.socket.send(a,b)},SyncList.prototype.sync=function(a){if(this.syncEnabled){var b=Array.prototype.slice.call(arguments,1);b.unshift("syncmodel."+a),this.emitRemote.apply(this,b)}},SyncList.prototype.fetchList=function(){this.emitRemote("synclist.fetch")},
//--
module.exports=SyncList;var XQCore=require("./xqcore-core"),Service=function(a,b){
//Call Event constructor
XQCore.Event.call(this),"object"==typeof arguments[0]&&(b=a,a=b.name),/**
     * Enable debug mode
     * @public
     * @type {Boolean}
     */
this.logLevel=XQCore.logLevel,void 0===b&&(b={}),"function"==typeof b?b.call(this,this):XQCore.extend(this,b),this.conf=b,this.name=(a?a.replace(/Service$/,""):"Nameless")+"Service",this.__state="ready"};
//Extend with ready state
XQCore.extend(Service.prototype,XQCore.ReadyState.prototype),XQCore.extend(Service.prototype,XQCore.Event.prototype),XQCore.extend(Service.prototype,new XQCore.Logger),
// XQCore.extend(Service.prototype, XQCore.Sync.prototype);
/**
 * Inherits a model prototype
 * @method inherit
 * @param  {String} name    model name
 * @param  {Object} options Service properties
 * @return {Object}         Returns a XQCore.Service prototype
 */
Service.inherit=function(a,b){"object"==typeof a&&(b=a,a=void 0);var c=function(c,d){
//TODO call this later, ready state will be set before _options had been run
XQCore.Service.call(this,a,b),c&&("string"==typeof c?a=c:d=c,"function"==typeof d?d.call(this,this):"object"==typeof d&&XQCore.extend(this,d))};return c.prototype=Object.create(XQCore.Service.prototype),c.prototype.constructor=c,c},/**
 * Change the model state
 *
 * @method state
 * @param {String} state New state
 */
Service.prototype.state=function(a){this.__state=a,this.emit("state."+a),this.emit("state.change",a)},/**
 * Get the current model state
 *
 * @method getState
 */
Service.prototype.getState=function(){return this.__state},
// Service.prototype.toJSON = function() {
//     return {};
// };
//--
module.exports=Service;